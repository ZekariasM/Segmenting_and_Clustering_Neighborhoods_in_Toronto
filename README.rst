Assignment 1
============

Segmenting and Clustering Neighborhoods in Toronto
==================================================

In this assignment, we will explore and cluster the neighborhoods in
Toronto using simple pandas code to scrap a `Wikipedia
page <https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M>`__.
The Wikipedia page comprises three tables, and we analyze the first
table that contains the Postal Code, Borough, and Neighbourhood.

Import necessary Libraries
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    import pandas as pd # library for data analsysis

Scrap the neighborhoods table
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    # Define the URL for the source data
    url =  'https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M'
    
    # Read HTML tables into a list of DataFrame objects.
    df = pd.read_html(url)
    
    # Get the number of tables scrapped from the Wikipedia page
    print(len(df))


.. parsed-literal::

    3
    

.. code:: ipython3

    # Select the appropriate neighborhoods table
    df = df[0]
    df.head()




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Postal Code</th>
          <th>Borough</th>
          <th>Neighbourhood</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>M1A</td>
          <td>Not assigned</td>
          <td>Not assigned</td>
        </tr>
        <tr>
          <th>1</th>
          <td>M2A</td>
          <td>Not assigned</td>
          <td>Not assigned</td>
        </tr>
        <tr>
          <th>2</th>
          <td>M3A</td>
          <td>North York</td>
          <td>Parkwoods</td>
        </tr>
        <tr>
          <th>3</th>
          <td>M4A</td>
          <td>North York</td>
          <td>Victoria Village</td>
        </tr>
        <tr>
          <th>4</th>
          <td>M5A</td>
          <td>Downtown Toronto</td>
          <td>Regent Park, Harbourfront</td>
        </tr>
      </tbody>
    </table>
    </div>



Cleaning and arranging the dataset.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

As we can see on the above tableâ€™s first and second row, the DataFrame
comprises multiple unassigned boroughs and neighborhoods. Hence, we
exclude boroughs that are not assigned from the DataFrame.

.. code:: ipython3

    # Exclude unassigned boroughs and reset the index of the DataFrame
    df = df[df['Borough']!='Not assigned'].reset_index(drop=True)
    
    # Rename the first column
    df = df.rename(columns={"Postal Code": "PostalCode"})
    
    df.head(15)
    




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>PostalCode</th>
          <th>Borough</th>
          <th>Neighbourhood</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>M3A</td>
          <td>North York</td>
          <td>Parkwoods</td>
        </tr>
        <tr>
          <th>1</th>
          <td>M4A</td>
          <td>North York</td>
          <td>Victoria Village</td>
        </tr>
        <tr>
          <th>2</th>
          <td>M5A</td>
          <td>Downtown Toronto</td>
          <td>Regent Park, Harbourfront</td>
        </tr>
        <tr>
          <th>3</th>
          <td>M6A</td>
          <td>North York</td>
          <td>Lawrence Manor, Lawrence Heights</td>
        </tr>
        <tr>
          <th>4</th>
          <td>M7A</td>
          <td>Downtown Toronto</td>
          <td>Queen's Park, Ontario Provincial Government</td>
        </tr>
        <tr>
          <th>5</th>
          <td>M9A</td>
          <td>Etobicoke</td>
          <td>Islington Avenue, Humber Valley Village</td>
        </tr>
        <tr>
          <th>6</th>
          <td>M1B</td>
          <td>Scarborough</td>
          <td>Malvern, Rouge</td>
        </tr>
        <tr>
          <th>7</th>
          <td>M3B</td>
          <td>North York</td>
          <td>Don Mills</td>
        </tr>
        <tr>
          <th>8</th>
          <td>M4B</td>
          <td>East York</td>
          <td>Parkview Hill, Woodbine Gardens</td>
        </tr>
        <tr>
          <th>9</th>
          <td>M5B</td>
          <td>Downtown Toronto</td>
          <td>Garden District, Ryerson</td>
        </tr>
        <tr>
          <th>10</th>
          <td>M6B</td>
          <td>North York</td>
          <td>Glencairn</td>
        </tr>
        <tr>
          <th>11</th>
          <td>M9B</td>
          <td>Etobicoke</td>
          <td>West Deane Park, Princess Gardens, Martin Grov...</td>
        </tr>
        <tr>
          <th>12</th>
          <td>M1C</td>
          <td>Scarborough</td>
          <td>Rouge Hill, Port Union, Highland Creek</td>
        </tr>
        <tr>
          <th>13</th>
          <td>M3C</td>
          <td>North York</td>
          <td>Don Mills</td>
        </tr>
        <tr>
          <th>14</th>
          <td>M4C</td>
          <td>East York</td>
          <td>Woodbine Heights</td>
        </tr>
      </tbody>
    </table>
    </div>



Get Shape of Pandas DataFrame
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    df.shape




.. parsed-literal::

    (103, 3)



Linking a `csv file <http://cocl.us/Geospatial_data>`__ that has the geographical coordinates of each postal code
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Explor the geogrphical DataFrame

.. code:: ipython3

    geo_df = pd.read_csv('Geospatial_Coordinates.csv')
    geo_df = geo_df.rename(columns={"Postal Code": "PostalCode"})
    geo_df.head()




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>PostalCode</th>
          <th>Latitude</th>
          <th>Longitude</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>M1B</td>
          <td>43.806686</td>
          <td>-79.194353</td>
        </tr>
        <tr>
          <th>1</th>
          <td>M1C</td>
          <td>43.784535</td>
          <td>-79.160497</td>
        </tr>
        <tr>
          <th>2</th>
          <td>M1E</td>
          <td>43.763573</td>
          <td>-79.188711</td>
        </tr>
        <tr>
          <th>3</th>
          <td>M1G</td>
          <td>43.770992</td>
          <td>-79.216917</td>
        </tr>
        <tr>
          <th>4</th>
          <td>M1H</td>
          <td>43.773136</td>
          <td>-79.239476</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    geo_df.shape




.. parsed-literal::

    (103, 3)



Merge the borough and geographical coordinates DataFrame

.. code:: ipython3

    geo_data = pd.merge(df, geo_df, on='PostalCode')
    geo_data.head(10)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>PostalCode</th>
          <th>Borough</th>
          <th>Neighbourhood</th>
          <th>Latitude</th>
          <th>Longitude</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>M3A</td>
          <td>North York</td>
          <td>Parkwoods</td>
          <td>43.753259</td>
          <td>-79.329656</td>
        </tr>
        <tr>
          <th>1</th>
          <td>M4A</td>
          <td>North York</td>
          <td>Victoria Village</td>
          <td>43.725882</td>
          <td>-79.315572</td>
        </tr>
        <tr>
          <th>2</th>
          <td>M5A</td>
          <td>Downtown Toronto</td>
          <td>Regent Park, Harbourfront</td>
          <td>43.654260</td>
          <td>-79.360636</td>
        </tr>
        <tr>
          <th>3</th>
          <td>M6A</td>
          <td>North York</td>
          <td>Lawrence Manor, Lawrence Heights</td>
          <td>43.718518</td>
          <td>-79.464763</td>
        </tr>
        <tr>
          <th>4</th>
          <td>M7A</td>
          <td>Downtown Toronto</td>
          <td>Queen's Park, Ontario Provincial Government</td>
          <td>43.662301</td>
          <td>-79.389494</td>
        </tr>
        <tr>
          <th>5</th>
          <td>M9A</td>
          <td>Etobicoke</td>
          <td>Islington Avenue, Humber Valley Village</td>
          <td>43.667856</td>
          <td>-79.532242</td>
        </tr>
        <tr>
          <th>6</th>
          <td>M1B</td>
          <td>Scarborough</td>
          <td>Malvern, Rouge</td>
          <td>43.806686</td>
          <td>-79.194353</td>
        </tr>
        <tr>
          <th>7</th>
          <td>M3B</td>
          <td>North York</td>
          <td>Don Mills</td>
          <td>43.745906</td>
          <td>-79.352188</td>
        </tr>
        <tr>
          <th>8</th>
          <td>M4B</td>
          <td>East York</td>
          <td>Parkview Hill, Woodbine Gardens</td>
          <td>43.706397</td>
          <td>-79.309937</td>
        </tr>
        <tr>
          <th>9</th>
          <td>M5B</td>
          <td>Downtown Toronto</td>
          <td>Garden District, Ryerson</td>
          <td>43.657162</td>
          <td>-79.378937</td>
        </tr>
      </tbody>
    </table>
    </div>



Explore and cluster the neighborhoods in Toronto
------------------------------------------------

Import necessary Libraries for the geographic analysis
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code:: ipython3

    # import library to handle data in a vectorized manner
    import numpy as np 
    
    # convert an address into latitude and longitude values
    from geopy.geocoders import Nominatim 
    
    # Matplotlib and associated plotting modules
    import matplotlib.cm as cm
    import matplotlib.colors as colors
    
    # map rendering library
    import folium 
    
    # import k-means from clustering stage
    from sklearn.cluster import KMeans
    
    print('Libraries imported.')


.. parsed-literal::

    Libraries imported.
    

Getting rows from the DataFrame which contains Toronto in their Borough.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    toronto_data = geo_data[geo_data['Borough'].str.contains('Toronto',regex=False)].reset_index(drop=True)
    toronto_data.head(10)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>PostalCode</th>
          <th>Borough</th>
          <th>Neighbourhood</th>
          <th>Latitude</th>
          <th>Longitude</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>M5A</td>
          <td>Downtown Toronto</td>
          <td>Regent Park, Harbourfront</td>
          <td>43.654260</td>
          <td>-79.360636</td>
        </tr>
        <tr>
          <th>1</th>
          <td>M7A</td>
          <td>Downtown Toronto</td>
          <td>Queen's Park, Ontario Provincial Government</td>
          <td>43.662301</td>
          <td>-79.389494</td>
        </tr>
        <tr>
          <th>2</th>
          <td>M5B</td>
          <td>Downtown Toronto</td>
          <td>Garden District, Ryerson</td>
          <td>43.657162</td>
          <td>-79.378937</td>
        </tr>
        <tr>
          <th>3</th>
          <td>M5C</td>
          <td>Downtown Toronto</td>
          <td>St. James Town</td>
          <td>43.651494</td>
          <td>-79.375418</td>
        </tr>
        <tr>
          <th>4</th>
          <td>M4E</td>
          <td>East Toronto</td>
          <td>The Beaches</td>
          <td>43.676357</td>
          <td>-79.293031</td>
        </tr>
        <tr>
          <th>5</th>
          <td>M5E</td>
          <td>Downtown Toronto</td>
          <td>Berczy Park</td>
          <td>43.644771</td>
          <td>-79.373306</td>
        </tr>
        <tr>
          <th>6</th>
          <td>M5G</td>
          <td>Downtown Toronto</td>
          <td>Central Bay Street</td>
          <td>43.657952</td>
          <td>-79.387383</td>
        </tr>
        <tr>
          <th>7</th>
          <td>M6G</td>
          <td>Downtown Toronto</td>
          <td>Christie</td>
          <td>43.669542</td>
          <td>-79.422564</td>
        </tr>
        <tr>
          <th>8</th>
          <td>M5H</td>
          <td>Downtown Toronto</td>
          <td>Richmond, Adelaide, King</td>
          <td>43.650571</td>
          <td>-79.384568</td>
        </tr>
        <tr>
          <th>9</th>
          <td>M6H</td>
          <td>West Toronto</td>
          <td>Dufferin, Dovercourt Village</td>
          <td>43.669005</td>
          <td>-79.442259</td>
        </tr>
      </tbody>
    </table>
    </div>



Create a map of Toronto, Canada with neighborhoods superimposed on top.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. code:: ipython3

    # create map of Toronto using latitude and longitude values
    map_torontoCa = folium.Map(location=[43.651070,-79.347015], zoom_start=10.5)
    
    # add markers to map
    for lat, lng, borough, neighbourhood in zip(toronto_data['Latitude'], toronto_data['Longitude'], toronto_data['Borough'], toronto_data['Neighbourhood']):
        label = '{}, {}'.format(neighbourhood, borough)
        label = folium.Popup(label, parse_html=True)
        folium.CircleMarker(
            [lat, lng],
            radius=5,
            popup=label,
            color='blue',
            fill=True,
            fill_color='#3186cc',
            fill_opacity=0.7,
            parse_html=False).add_to(map_torontoCa)
        
        folium.CircleMarker(
            location=[43.6534817, -79.3839347],
            radius=150,
            popup='Laurelhurst Park',
            color='chartreuse',
            fill=False).add_to(map_torontoCa)
    
    map_torontoCa




.. raw:: html

    <div style="width:100%;"><div style="position:relative;width:100%;height:0;padding-bottom:60%;"><span style="color:#565656">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src="about:blank" style="position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;" data-html= onload="this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>



Using KMeans clustering for the clsutering of the neighbourhoods
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Run *k*-means to cluster the neighborhood into 5 clusters.

.. code:: ipython3

    # set number of clusters
    kclusters = 4
    toronto_clustering = toronto_data.drop(['PostalCode','Borough','Neighbourhood'], 1)
    
    # run k-means clustering
    kmeans = KMeans(n_clusters=kclusters, random_state=0).fit(toronto_clustering)
    
    # check cluster labels generated for each row in the dataframe
    kmeans.labels_[0:20]




.. parsed-literal::

    array([3, 3, 3, 3, 0, 3, 3, 1, 3, 1, 3, 1, 0, 3, 1, 0, 3, 0, 2, 2])



Now update our dataframe to include the cluster

.. code:: ipython3

    # add clustering labels
    toronto_data.insert(5, 'Cluster Labels', kmeans.labels_)
    toronto_data.head() # check the last columns!




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>PostalCode</th>
          <th>Borough</th>
          <th>Neighbourhood</th>
          <th>Latitude</th>
          <th>Longitude</th>
          <th>Cluster Labels</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>M5A</td>
          <td>Downtown Toronto</td>
          <td>Regent Park, Harbourfront</td>
          <td>43.654260</td>
          <td>-79.360636</td>
          <td>3</td>
        </tr>
        <tr>
          <th>1</th>
          <td>M7A</td>
          <td>Downtown Toronto</td>
          <td>Queen's Park, Ontario Provincial Government</td>
          <td>43.662301</td>
          <td>-79.389494</td>
          <td>3</td>
        </tr>
        <tr>
          <th>2</th>
          <td>M5B</td>
          <td>Downtown Toronto</td>
          <td>Garden District, Ryerson</td>
          <td>43.657162</td>
          <td>-79.378937</td>
          <td>3</td>
        </tr>
        <tr>
          <th>3</th>
          <td>M5C</td>
          <td>Downtown Toronto</td>
          <td>St. James Town</td>
          <td>43.651494</td>
          <td>-79.375418</td>
          <td>3</td>
        </tr>
        <tr>
          <th>4</th>
          <td>M4E</td>
          <td>East Toronto</td>
          <td>The Beaches</td>
          <td>43.676357</td>
          <td>-79.293031</td>
          <td>0</td>
        </tr>
      </tbody>
    </table>
    </div>



Final visualization of the Tornto neighborhood clusters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: ipython3

    # create map
    map_clusters_tornoto = folium.Map(location=[43.651070,-79.347015],zoom_start=10)
    
    # set color scheme for the clusters
    x = np.arange(kclusters)
    ys = [i + x + (i*x)**2 for i in range(kclusters)]
    colors_array = cm.rainbow(np.linspace(0, 1, len(ys)))
    rainbow = [colors.rgb2hex(i) for i in colors_array]
    
    # add markers to the map
    markers_colors = []
    for lat, lon, neighbourhood, cluster in zip(toronto_data['Latitude'], toronto_data['Longitude'], toronto_data['Neighbourhood'], toronto_data['Cluster Labels']):
        label = folium.Popup(' Cluster ' + str(cluster), parse_html=True)
        folium.CircleMarker(
            [lat, lon],
            radius=5,
            popup=label,
            color=rainbow[cluster-1],
            fill=True,
            fill_color=rainbow[cluster-1],
            fill_opacity=0.7).add_to(map_clusters_tornoto)
        
        folium.CircleMarker(
            location=[43.6534817, -79.3839347],
            radius=150,
            popup='Laurelhurst Park',
            color='chartreuse',
            fill=False).add_to(map_clusters_tornoto)
    
    map_clusters_tornoto




.. raw:: html

    <div style="width:100%;"><div style="position:relative;width:100%;height:0;padding-bottom:60%;"><span style="color:#565656">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src="about:blank" style="position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;" data-html=PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgPHNjcmlwdD5MX1BSRUZFUl9DQU5WQVMgPSBmYWxzZTsgTF9OT19UT1VDSCA9IGZhbHNlOyBMX0RJU0FCTEVfM0QgPSBmYWxzZTs8L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS4yLjAvZGlzdC9sZWFmbGV0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjExLjEvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvTGVhZmxldC5hd2Vzb21lLW1hcmtlcnMvMi4wLjIvbGVhZmxldC5hd2Vzb21lLW1hcmtlcnMuanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS4yLjAvZGlzdC9sZWFmbGV0LmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvY3NzL2Jvb3RzdHJhcC10aGVtZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vZm9udC1hd2Vzb21lLzQuNi4zL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9yYXdnaXQuY29tL3B5dGhvbi12aXN1YWxpemF0aW9uL2ZvbGl1bS9tYXN0ZXIvZm9saXVtL3RlbXBsYXRlcy9sZWFmbGV0LmF3ZXNvbWUucm90YXRlLmNzcyIvPgogICAgPHN0eWxlPmh0bWwsIGJvZHkge3dpZHRoOiAxMDAlO2hlaWdodDogMTAwJTttYXJnaW46IDA7cGFkZGluZzogMDt9PC9zdHlsZT4KICAgIDxzdHlsZT4jbWFwIHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtib3R0b206MDtyaWdodDowO2xlZnQ6MDt9PC9zdHlsZT4KICAgIAogICAgICAgICAgICA8c3R5bGU+ICNtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIgewogICAgICAgICAgICAgICAgcG9zaXRpb24gOiByZWxhdGl2ZTsKICAgICAgICAgICAgICAgIHdpZHRoIDogMTAwLjAlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAuMCU7CiAgICAgICAgICAgICAgICBsZWZ0OiAwLjAlOwogICAgICAgICAgICAgICAgdG9wOiAwLjAlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICA8L3N0eWxlPgogICAgICAgIAo8L2hlYWQ+Cjxib2R5PiAgICAKICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb2xpdW0tbWFwIiBpZD0ibWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyIiA+PC9kaXY+CiAgICAgICAgCjwvYm9keT4KPHNjcmlwdD4gICAgCiAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGJvdW5kcyA9IG51bGw7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgdmFyIG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMiA9IEwubWFwKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ21hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMicsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y2VudGVyOiBbNDMuNjUxMDcsLTc5LjM0NzAxNV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6b29tOiAxMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heEJvdW5kczogYm91bmRzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGF5ZXJzOiBbXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvcmxkQ29weUp1bXA6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JzOiBMLkNSUy5FUFNHMzg1NwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHRpbGVfbGF5ZXJfYWEyMThmNzk5OTBjNGYwODk1ZTljYzI1ZDlkNTg5YWEgPSBMLnRpbGVMYXllcigKICAgICAgICAgICAgICAgICdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsCiAgICAgICAgICAgICAgICB7CiAgImF0dHJpYnV0aW9uIjogbnVsbCwKICAiZGV0ZWN0UmV0aW5hIjogZmFsc2UsCiAgIm1heFpvb20iOiAxOCwKICAibWluWm9vbSI6IDEsCiAgIm5vV3JhcCI6IGZhbHNlLAogICJzdWJkb21haW5zIjogImFiYyIKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzIyMDIwNjlmNjIyZTQxNjE5MjIwYzljYTExNzM4ZmU3ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjU0MjU5OSwtNzkuMzYwNjM1OV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF82Zjk1Y2FjZmYxOWI0Y2YxYWNkOTg5OTAzOWJmMjM3MiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9jOTIyNTdjNjljZDM0MmJiOGVlY2M5OTRjMzc3MjQ3MyA9ICQoJzxkaXYgaWQ9Imh0bWxfYzkyMjU3YzY5Y2QzNDJiYjhlZWNjOTk0YzM3NzI0NzMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzZmOTVjYWNmZjE5YjRjZjFhY2Q5ODk5MDM5YmYyMzcyLnNldENvbnRlbnQoaHRtbF9jOTIyNTdjNjljZDM0MmJiOGVlY2M5OTRjMzc3MjQ3Myk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8yMjAyMDY5ZjYyMmU0MTYxOTIyMGM5Y2ExMTczOGZlNy5iaW5kUG9wdXAocG9wdXBfNmY5NWNhY2ZmMTliNGNmMWFjZDk4OTkwMzliZjIzNzIpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfODVkYWZmZjljNTllNGY4Mzg4OTU4MGY2YTVmZDMzOWUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2Y5OGJkYTc3MzIyNjRkNzU4MjY1ODM3MDhlMTc5ZGVlID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2M3YzhjM2VjYWNhYzRmYTVhOWZmY2I1YjQzOWE0Y2IyID0gJCgnPGRpdiBpZD0iaHRtbF9jN2M4YzNlY2FjYWM0ZmE1YTlmZmNiNWI0MzlhNGNiMiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZjk4YmRhNzczMjI2NGQ3NTgyNjU4MzcwOGUxNzlkZWUuc2V0Q29udGVudChodG1sX2M3YzhjM2VjYWNhYzRmYTVhOWZmY2I1YjQzOWE0Y2IyKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzg1ZGFmZmY5YzU5ZTRmODM4ODk1ODBmNmE1ZmQzMzllLmJpbmRQb3B1cChwb3B1cF9mOThiZGE3NzMyMjY0ZDc1ODI2NTgzNzA4ZTE3OWRlZSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl8wNjdlZmNmZjIyZTg0YmVlYjNlODNhMWZlZmE5ZWEzYyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY2MjMwMTUsLTc5LjM4OTQ5MzhdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNkNGRkODAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZjhmMzBiYmU1NmEwNGEwZDllNDU2ZDdkMDMxNmJkODQgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfYWVhZGVjNDYxMzVjNDRlNTljYTY3ZDBkZDA1YzE5ZjggPSAkKCc8ZGl2IGlkPSJodG1sX2FlYWRlYzQ2MTM1YzQ0ZTU5Y2E2N2QwZGQwNWMxOWY4IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAzPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9mOGYzMGJiZTU2YTA0YTBkOWU0NTZkN2QwMzE2YmQ4NC5zZXRDb250ZW50KGh0bWxfYWVhZGVjNDYxMzVjNDRlNTljYTY3ZDBkZDA1YzE5ZjgpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMDY3ZWZjZmYyMmU4NGJlZWIzZTgzYTFmZWZhOWVhM2MuYmluZFBvcHVwKHBvcHVwX2Y4ZjMwYmJlNTZhMDRhMGQ5ZTQ1NmQ3ZDAzMTZiZDg0KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzljOTk1MGM3ZWI2ODQ5OWZiNjUzYWQ4NzA3ZWVhNTlkID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9lMDMxMTA0OGMyYzQ0Y2ZkOGFjYjg2MzM0ZjUyYmViMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF80MzBlZjQ0OTZhYzI0ODI3OWZlOWRkNGI5NjIyMGY4ZSA9ICQoJzxkaXYgaWQ9Imh0bWxfNDMwZWY0NDk2YWMyNDgyNzlmZTlkZDRiOTYyMjBmOGUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2UwMzExMDQ4YzJjNDRjZmQ4YWNiODYzMzRmNTJiZWIzLnNldENvbnRlbnQoaHRtbF80MzBlZjQ0OTZhYzI0ODI3OWZlOWRkNGI5NjIyMGY4ZSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl85Yzk5NTBjN2ViNjg0OTlmYjY1M2FkODcwN2VlYTU5ZC5iaW5kUG9wdXAocG9wdXBfZTAzMTEwNDhjMmM0NGNmZDhhY2I4NjMzNGY1MmJlYjMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNWRhM2JiNzJhNTQwNGU0YThlYjRmYWI3OTkwOTE4OGMgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTcxNjE4LC03OS4zNzg5MzcwOTk5OTk5OV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iM2ZiNGNkOGZjNTc0OWVhYWMyZTJjNTZiZTlhMDVkMCA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9lNWI0NzVjMDY1YjE0MzYxYjY1NGU3YWZiNWFkMmQ3MyA9ICQoJzxkaXYgaWQ9Imh0bWxfZTViNDc1YzA2NWIxNDM2MWI2NTRlN2FmYjVhZDJkNzMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2IzZmI0Y2Q4ZmM1NzQ5ZWFhYzJlMmM1NmJlOWEwNWQwLnNldENvbnRlbnQoaHRtbF9lNWI0NzVjMDY1YjE0MzYxYjY1NGU3YWZiNWFkMmQ3Myk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl81ZGEzYmI3MmE1NDA0ZTRhOGViNGZhYjc5OTA5MTg4Yy5iaW5kUG9wdXAocG9wdXBfYjNmYjRjZDhmYzU3NDllYWFjMmUyYzU2YmU5YTA1ZDApOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfOTNkM2ZhNzc3NjJkNDdkMjliODdiMzcxNWY5YzFhODUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzA2YjIyMmNjZmEwOTRkZDdhMDRlNmZjN2IyMWI0YTBmID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzZlNGJmM2NiNjI0MDQ2MmFiY2Q2ZDZmY2Q1ODk0Yzg0ID0gJCgnPGRpdiBpZD0iaHRtbF82ZTRiZjNjYjYyNDA0NjJhYmNkNmQ2ZmNkNTg5NGM4NCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMDZiMjIyY2NmYTA5NGRkN2EwNGU2ZmM3YjIxYjRhMGYuc2V0Q29udGVudChodG1sXzZlNGJmM2NiNjI0MDQ2MmFiY2Q2ZDZmY2Q1ODk0Yzg0KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzkzZDNmYTc3NzYyZDQ3ZDI5Yjg3YjM3MTVmOWMxYTg1LmJpbmRQb3B1cChwb3B1cF8wNmIyMjJjY2ZhMDk0ZGQ3YTA0ZTZmYzdiMjFiNGEwZik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9jM2M5NGQwMGNlMWY0MTllOGFiMTk5ZTdkMDI5NjFkMSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MTQ5MzksLTc5LjM3NTQxNzldLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNkNGRkODAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYTM0NTU0MDU5ZTEyNDc0ZWExNjZjMjU2OTU0Y2ZjNTQgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfYmM1Yjk5YjdiNDgwNDAzZWJhMGNiOWJhMjgzYjI3ZjMgPSAkKCc8ZGl2IGlkPSJodG1sX2JjNWI5OWI3YjQ4MDQwM2ViYTBjYjliYTI4M2IyN2YzIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAzPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9hMzQ1NTQwNTllMTI0NzRlYTE2NmMyNTY5NTRjZmM1NC5zZXRDb250ZW50KGh0bWxfYmM1Yjk5YjdiNDgwNDAzZWJhMGNiOWJhMjgzYjI3ZjMpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfYzNjOTRkMDBjZTFmNDE5ZThhYjE5OWU3ZDAyOTYxZDEuYmluZFBvcHVwKHBvcHVwX2EzNDU1NDA1OWUxMjQ3NGVhMTY2YzI1Njk1NGNmYzU0KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzIzNzU0MmM1YTgxMDRlNzA4N2I5NDUwNDZmYjQ0NjUyID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9mNzY3YTQ3ZThkYmM0MmU5ODg3OWNiYjIyNTkwOTkzMiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8xZDU1ZjcxNGU0NmU0ZWJlOTIwM2YyNDAzNTBmNDAzZCA9ICQoJzxkaXYgaWQ9Imh0bWxfMWQ1NWY3MTRlNDZlNGViZTkyMDNmMjQwMzUwZjQwM2QiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2Y3NjdhNDdlOGRiYzQyZTk4ODc5Y2JiMjI1OTA5OTMyLnNldENvbnRlbnQoaHRtbF8xZDU1ZjcxNGU0NmU0ZWJlOTIwM2YyNDAzNTBmNDAzZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8yMzc1NDJjNWE4MTA0ZTcwODdiOTQ1MDQ2ZmI0NDY1Mi5iaW5kUG9wdXAocG9wdXBfZjc2N2E0N2U4ZGJjNDJlOTg4NzljYmIyMjU5MDk5MzIpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMTljMjIzMDMzYTgwNDk2NWExZGYxZmZhMzAyMjE2ODkgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NzYzNTczOTk5OTk5OSwtNzkuMjkzMDMxMl0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZmYwMDAwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2ZmMDAwMCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iMzY4NTQyZGVlYTQ0ZWEwYWUzNWU4MGE2ZmEyZTNiNCA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8wMDAxNjM5YTg0ZDY0Njk1OGY0Yjc0MWE5NDkyNjM3ZiA9ICQoJzxkaXYgaWQ9Imh0bWxfMDAwMTYzOWE4NGQ2NDY5NThmNGI3NDFhOTQ5MjYzN2YiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDA8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2IzNjg1NDJkZWVhNDRlYTBhZTM1ZTgwYTZmYTJlM2I0LnNldENvbnRlbnQoaHRtbF8wMDAxNjM5YTg0ZDY0Njk1OGY0Yjc0MWE5NDkyNjM3Zik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8xOWMyMjMwMzNhODA0OTY1YTFkZjFmZmEzMDIyMTY4OS5iaW5kUG9wdXAocG9wdXBfYjM2ODU0MmRlZWE0NGVhMGFlMzVlODBhNmZhMmUzYjQpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMTA5ZTFkOGY0YmM1NGFjYzhiZjM2ZDEwZWFiZTU0ZDUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzcwMTkzMDQwMWI0NzQ5MGI4Njg2OWYzMjJkZTAxOGY1ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2NjNGQwYWYwMjE2MDRlMDY4YThiOWY1Nzg0OGI1OWY0ID0gJCgnPGRpdiBpZD0iaHRtbF9jYzRkMGFmMDIxNjA0ZTA2OGE4YjlmNTc4NDhiNTlmNCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNzAxOTMwNDAxYjQ3NDkwYjg2ODY5ZjMyMmRlMDE4ZjUuc2V0Q29udGVudChodG1sX2NjNGQwYWYwMjE2MDRlMDY4YThiOWY1Nzg0OGI1OWY0KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzEwOWUxZDhmNGJjNTRhY2M4YmYzNmQxMGVhYmU1NGQ1LmJpbmRQb3B1cChwb3B1cF83MDE5MzA0MDFiNDc0OTBiODY4NjlmMzIyZGUwMThmNSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl8yNTVjNWI3MTFhNzU0MjAzYjU3N2UwNzE1NmYwMmU0NCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY0NDc3MDc5OTk5OTk5NiwtNzkuMzczMzA2NF0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8xMDgyMjYxYjc0ZjM0ZTYzOWI0YzFkOGE4OTZjMzhlMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8wZjM0MjQzMDViNWY0OGM3OTEyZTNiNDk0NzJhNTY3YSA9ICQoJzxkaXYgaWQ9Imh0bWxfMGYzNDI0MzA1YjVmNDhjNzkxMmUzYjQ5NDcyYTU2N2EiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzEwODIyNjFiNzRmMzRlNjM5YjRjMWQ4YTg5NmMzOGUzLnNldENvbnRlbnQoaHRtbF8wZjM0MjQzMDViNWY0OGM3OTEyZTNiNDk0NzJhNTY3YSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8yNTVjNWI3MTFhNzU0MjAzYjU3N2UwNzE1NmYwMmU0NC5iaW5kUG9wdXAocG9wdXBfMTA4MjI2MWI3NGYzNGU2MzliNGMxZDhhODk2YzM4ZTMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfYmRjMzEwZmQzNTgxNGMzMWJlZjExNWI3M2M5NzI1MDQgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2VmYmUzMDJkZWM0ODRhOGU5YzMzNjdkNTgyMTE4NmFmID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2U3YTVlN2ZkMWE5NDQ3NGRiNWU5NDk3MTg1MDMyNGYzID0gJCgnPGRpdiBpZD0iaHRtbF9lN2E1ZTdmZDFhOTQ0NzRkYjVlOTQ5NzE4NTAzMjRmMyIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZWZiZTMwMmRlYzQ4NGE4ZTljMzM2N2Q1ODIxMTg2YWYuc2V0Q29udGVudChodG1sX2U3YTVlN2ZkMWE5NDQ3NGRiNWU5NDk3MTg1MDMyNGYzKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2JkYzMxMGZkMzU4MTRjMzFiZWYxMTViNzNjOTcyNTA0LmJpbmRQb3B1cChwb3B1cF9lZmJlMzAyZGVjNDg0YThlOWMzMzY3ZDU4MjExODZhZik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl84OTdiNDA2ZDllOTA0ZWNmYThhYTBiNWI2MTNiZjk4YiA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1Nzk1MjQsLTc5LjM4NzM4MjZdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNkNGRkODAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfM2I5ODIwMDQ0MGRhNDc2OGJiMWI5MjFjZGNkYTkxNTMgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfYjU4Y2YyNzViMjVmNDg2ODg2NmVmZWE0ZGE5Y2JjZmEgPSAkKCc8ZGl2IGlkPSJodG1sX2I1OGNmMjc1YjI1ZjQ4Njg4NjZlZmVhNGRhOWNiY2ZhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAzPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8zYjk4MjAwNDQwZGE0NzY4YmIxYjkyMWNkY2RhOTE1My5zZXRDb250ZW50KGh0bWxfYjU4Y2YyNzViMjVmNDg2ODg2NmVmZWE0ZGE5Y2JjZmEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfODk3YjQwNmQ5ZTkwNGVjZmE4YWEwYjViNjEzYmY5OGIuYmluZFBvcHVwKHBvcHVwXzNiOTgyMDA0NDBkYTQ3NjhiYjFiOTIxY2RjZGE5MTUzKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzA5YTdjODUxYjU1ODQ4MjU5NDE1YjhlNmYyYzc5NWViID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8xODU0ZWY5ZGFkYzE0YmEyOTFkNDllYjUzNGVlMTI3YiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8yYzA4ZmViYjJiMzk0MWI1ODNhOTMwMjEyNmNmMzJhOCA9ICQoJzxkaXYgaWQ9Imh0bWxfMmMwOGZlYmIyYjM5NDFiNTgzYTkzMDIxMjZjZjMyYTgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzE4NTRlZjlkYWRjMTRiYTI5MWQ0OWViNTM0ZWUxMjdiLnNldENvbnRlbnQoaHRtbF8yYzA4ZmViYjJiMzk0MWI1ODNhOTMwMjEyNmNmMzJhOCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8wOWE3Yzg1MWI1NTg0ODI1OTQxNWI4ZTZmMmM3OTVlYi5iaW5kUG9wdXAocG9wdXBfMTg1NGVmOWRhZGMxNGJhMjkxZDQ5ZWI1MzRlZTEyN2IpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfYzAyMTZmYzUxODE2NGZiOWI5NGY4ODFhNDBhNjllMGQgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42Njk1NDIsLTc5LjQyMjU2MzddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzgwMDBmZiIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiM4MDAwZmYiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfODU3MDQzZTllZDc3NDRiYTllZjA4ZDk2OGE3YzAyZjMgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfYTkwMTg4YmM0OWQxNDEyZGIyNDkzNzJiMWFiN2Q0NmMgPSAkKCc8ZGl2IGlkPSJodG1sX2E5MDE4OGJjNDlkMTQxMmRiMjQ5MzcyYjFhYjdkNDZjIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAxPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF84NTcwNDNlOWVkNzc0NGJhOWVmMDhkOTY4YTdjMDJmMy5zZXRDb250ZW50KGh0bWxfYTkwMTg4YmM0OWQxNDEyZGIyNDkzNzJiMWFiN2Q0NmMpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfYzAyMTZmYzUxODE2NGZiOWI5NGY4ODFhNDBhNjllMGQuYmluZFBvcHVwKHBvcHVwXzg1NzA0M2U5ZWQ3NzQ0YmE5ZWYwOGQ5NjhhN2MwMmYzKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzRkMTQ2ODQzNjgzYzRkOWU5NzMzNDEwYTQ5MWIzNDYzID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF82YmY2OTUyYWVkZTM0Njg2OWI3ODk3ZWRlOTdlZDAwMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9iNTIyMWE3M2Y1M2U0NWZhOWZjNWY5NjJlMDFhNjVlNCA9ICQoJzxkaXYgaWQ9Imh0bWxfYjUyMjFhNzNmNTNlNDVmYTlmYzVmOTYyZTAxYTY1ZTQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzZiZjY5NTJhZWRlMzQ2ODY5Yjc4OTdlZGU5N2VkMDAzLnNldENvbnRlbnQoaHRtbF9iNTIyMWE3M2Y1M2U0NWZhOWZjNWY5NjJlMDFhNjVlNCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl80ZDE0Njg0MzY4M2M0ZDllOTczMzQxMGE0OTFiMzQ2My5iaW5kUG9wdXAocG9wdXBfNmJmNjk1MmFlZGUzNDY4NjliNzg5N2VkZTk3ZWQwMDMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfZjIxZjRiNjA4MjVmNDdiYTkzYjJkNmQwNTk1YzFkYjUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTA1NzEyMDAwMDAwMSwtNzkuMzg0NTY3NV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF80Njg4NjI2OTFiMTk0ZjUwOTA1MWZkY2U5MTg1OTJkZiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8wNDBjNTc3MTJlZDQ0YzFjOWI3ZmZmNDdlNzUzNjgxYyA9ICQoJzxkaXYgaWQ9Imh0bWxfMDQwYzU3NzEyZWQ0NGMxYzliN2ZmZjQ3ZTc1MzY4MWMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzQ2ODg2MjY5MWIxOTRmNTA5MDUxZmRjZTkxODU5MmRmLnNldENvbnRlbnQoaHRtbF8wNDBjNTc3MTJlZDQ0YzFjOWI3ZmZmNDdlNzUzNjgxYyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9mMjFmNGI2MDgyNWY0N2JhOTNiMmQ2ZDA1OTVjMWRiNS5iaW5kUG9wdXAocG9wdXBfNDY4ODYyNjkxYjE5NGY1MDkwNTFmZGNlOTE4NTkyZGYpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNDhhOTlhZDFjMTI5NGYyNTgyNWY0YjYyZDc1YWJmYWMgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzUwNmI4YWFjOTNkNTQ3NWJhOGM1M2ExNGU3YTA1OWExID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzVkNTIzNmQwYWM2ZTRiZDQ5ZDk1YWEwODZlYTVmZGQ2ID0gJCgnPGRpdiBpZD0iaHRtbF81ZDUyMzZkMGFjNmU0YmQ0OWQ5NWFhMDg2ZWE1ZmRkNiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNTA2YjhhYWM5M2Q1NDc1YmE4YzUzYTE0ZTdhMDU5YTEuc2V0Q29udGVudChodG1sXzVkNTIzNmQwYWM2ZTRiZDQ5ZDk1YWEwODZlYTVmZGQ2KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzQ4YTk5YWQxYzEyOTRmMjU4MjVmNGI2MmQ3NWFiZmFjLmJpbmRQb3B1cChwb3B1cF81MDZiOGFhYzkzZDU0NzViYThjNTNhMTRlN2EwNTlhMSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9hY2M0ZmZkMWIzODY0YzU0OGNlMmJjNzE5YTEwMjc0ZCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY2OTAwNTEwMDAwMDAxLC03OS40NDIyNTkzXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiM4MDAwZmYiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjODAwMGZmIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2MxODViYWY5MTQ1NzRiYTRiNWNlNTllYmM0YzZhZTBmID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzkwYjNiMjMzNDJlZjQ5NWNiZjNkNzY4ZDEwODU4NWFiID0gJCgnPGRpdiBpZD0iaHRtbF85MGIzYjIzMzQyZWY0OTVjYmYzZDc2OGQxMDg1ODVhYiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+IENsdXN0ZXIgMTwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYzE4NWJhZjkxNDU3NGJhNGI1Y2U1OWViYzRjNmFlMGYuc2V0Q29udGVudChodG1sXzkwYjNiMjMzNDJlZjQ5NWNiZjNkNzY4ZDEwODU4NWFiKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2FjYzRmZmQxYjM4NjRjNTQ4Y2UyYmM3MTlhMTAyNzRkLmJpbmRQb3B1cChwb3B1cF9jMTg1YmFmOTE0NTc0YmE0YjVjZTU5ZWJjNGM2YWUwZik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl84MTE5ZjRhYTA1ZWY0YTM0OGVkOTAzODI3MGJkNTBiZCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MzQ4MTcsLTc5LjM4MzkzNDddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogZmFsc2UsCiAgImZpbGxDb2xvciI6ICJjaGFydHJldXNlIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAxNTAsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZTIwYzcwZGEwMmM3NDViZjg4ZjZhZDBmOGFiNGEwODMgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNThkNWVlMGMxY2Q4NGQwOWIxNTBmZWNkNDQ1NDlhMzggPSAkKCc8ZGl2IGlkPSJodG1sXzU4ZDVlZTBjMWNkODRkMDliMTUwZmVjZDQ0NTQ5YTM4IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MYXVyZWxodXJzdCBQYXJrPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9lMjBjNzBkYTAyYzc0NWJmODhmNmFkMGY4YWI0YTA4My5zZXRDb250ZW50KGh0bWxfNThkNWVlMGMxY2Q4NGQwOWIxNTBmZWNkNDQ1NDlhMzgpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfODExOWY0YWEwNWVmNGEzNDhlZDkwMzgyNzBiZDUwYmQuYmluZFBvcHVwKHBvcHVwX2UyMGM3MGRhMDJjNzQ1YmY4OGY2YWQwZjhhYjRhMDgzKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzEyOTI3Njc5MGY5OTQ0OWQ4N2ZjZGQ4MjJjYzQzNDUwID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjQwODE1NywtNzkuMzgxNzUyMjk5OTk5OTldLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNkNGRkODAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMDBlNzMyMjI4N2ViNGRhYjk2MWY5MzhhOTQzMzZhMGMgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfODMwZjVkMGQ5ZjI1NDExMmJjOWNkZWE2ODRiN2JkNzQgPSAkKCc8ZGl2IGlkPSJodG1sXzgzMGY1ZDBkOWYyNTQxMTJiYzljZGVhNjg0YjdiZDc0IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAzPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8wMGU3MzIyMjg3ZWI0ZGFiOTYxZjkzOGE5NDMzNmEwYy5zZXRDb250ZW50KGh0bWxfODMwZjVkMGQ5ZjI1NDExMmJjOWNkZWE2ODRiN2JkNzQpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMTI5Mjc2NzkwZjk5NDQ5ZDg3ZmNkZDgyMmNjNDM0NTAuYmluZFBvcHVwKHBvcHVwXzAwZTczMjIyODdlYjRkYWI5NjFmOTM4YTk0MzM2YTBjKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2U5MzdjN2JiMGYxYjQ5YzlhMTNiNzU1OGMwMWRiNGI1ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8xZmJlMGQ2MjhkNGM0ZWNjYjNkMmNjODEwNWYyNjQ3MSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9lZWY4YzVmZGQ1Yjk0NzIyOTI0ODg5ZDI1NjI4ZGM1OSA9ICQoJzxkaXYgaWQ9Imh0bWxfZWVmOGM1ZmRkNWI5NDcyMjkyNDg4OWQyNTYyOGRjNTkiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzFmYmUwZDYyOGQ0YzRlY2NiM2QyY2M4MTA1ZjI2NDcxLnNldENvbnRlbnQoaHRtbF9lZWY4YzVmZGQ1Yjk0NzIyOTI0ODg5ZDI1NjI4ZGM1OSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9lOTM3YzdiYjBmMWI0OWM5YTEzYjc1NThjMDFkYjRiNS5iaW5kUG9wdXAocG9wdXBfMWZiZTBkNjI4ZDRjNGVjY2IzZDJjYzgxMDVmMjY0NzEpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfYzk3ZDkwMTRlZDZhNDQ5ODkyZjNmNDM2MDkyNmY1YTYgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NDc5MjY3MDAwMDAwMDYsLTc5LjQxOTc0OTddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzgwMDBmZiIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiM4MDAwZmYiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMzJiYjg2Zjc1Mjk5NGRhZmE2NjcwZGVhYzc2NDdkZDEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfZmZjOGQ0OTM1ZGMzNGU5ZWE1NjE0NmE5ZDgxMjU3YzYgPSAkKCc8ZGl2IGlkPSJodG1sX2ZmYzhkNDkzNWRjMzRlOWVhNTYxNDZhOWQ4MTI1N2M2IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAxPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8zMmJiODZmNzUyOTk0ZGFmYTY2NzBkZWFjNzY0N2RkMS5zZXRDb250ZW50KGh0bWxfZmZjOGQ0OTM1ZGMzNGU5ZWE1NjE0NmE5ZDgxMjU3YzYpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfYzk3ZDkwMTRlZDZhNDQ5ODkyZjNmNDM2MDkyNmY1YTYuYmluZFBvcHVwKHBvcHVwXzMyYmI4NmY3NTI5OTRkYWZhNjY3MGRlYWM3NjQ3ZGQxKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2JhOWQ2MmUzZWNlMjQ1NDQ5ZjI3ZWJiYTgxZWEwY2I4ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8yNjkzMTEwNjgxNGY0MjI4YjVhOGVmNzUwNzg1ODdiMCA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8zMDBkNzdiOTQ4Nzg0NjI5YTFlNjVmNWZjNTk3YThlYiA9ICQoJzxkaXYgaWQ9Imh0bWxfMzAwZDc3Yjk0ODc4NDYyOWExZTY1ZjVmYzU5N2E4ZWIiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzI2OTMxMTA2ODE0ZjQyMjhiNWE4ZWY3NTA3ODU4N2IwLnNldENvbnRlbnQoaHRtbF8zMDBkNzdiOTQ4Nzg0NjI5YTFlNjVmNWZjNTk3YThlYik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9iYTlkNjJlM2VjZTI0NTQ0OWYyN2ViYmE4MWVhMGNiOC5iaW5kUG9wdXAocG9wdXBfMjY5MzExMDY4MTRmNDIyOGI1YThlZjc1MDc4NTg3YjApOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNzQ1MmMzMDBhNTg3NDY2YjkzZmUyZDJlZjc3YjI4ZWQgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42Nzk1NTcxLC03OS4zNTIxODhdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2ZmMDAwMCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNmZjAwMDAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZDIzNjY3NjQ0MzhjNGM3MjljMThjYjZhZGRlMWE4ZTMgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNmZhMDFjZDAxMzZlNDQxYmI3YzMzMzQ3ZDg1MDRlNDEgPSAkKCc8ZGl2IGlkPSJodG1sXzZmYTAxY2QwMTM2ZTQ0MWJiN2MzMzM0N2Q4NTA0ZTQxIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAwPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9kMjM2Njc2NDQzOGM0YzcyOWMxOGNiNmFkZGUxYThlMy5zZXRDb250ZW50KGh0bWxfNmZhMDFjZDAxMzZlNDQxYmI3YzMzMzQ3ZDg1MDRlNDEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNzQ1MmMzMDBhNTg3NDY2YjkzZmUyZDJlZjc3YjI4ZWQuYmluZFBvcHVwKHBvcHVwX2QyMzY2NzY0NDM4YzRjNzI5YzE4Y2I2YWRkZTFhOGUzKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzBlNDJiOWM2MTc2NjRjMDE4MjBjMDEzYzI0OTM1YWRkID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF82NjM0YjJlYTM5YTY0ZjAwODNhZjNlNDkxN2ZkMWE4NSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF84Nzg4NGViZWNkMWU0NmVjOTM2ZmY2MjJkY2ViZjY0NCA9ICQoJzxkaXYgaWQ9Imh0bWxfODc4ODRlYmVjZDFlNDZlYzkzNmZmNjIyZGNlYmY2NDQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzY2MzRiMmVhMzlhNjRmMDA4M2FmM2U0OTE3ZmQxYTg1LnNldENvbnRlbnQoaHRtbF84Nzg4NGViZWNkMWU0NmVjOTM2ZmY2MjJkY2ViZjY0NCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8wZTQyYjljNjE3NjY0YzAxODIwYzAxM2MyNDkzNWFkZC5iaW5kUG9wdXAocG9wdXBfNjYzNGIyZWEzOWE2NGYwMDgzYWYzZTQ5MTdmZDFhODUpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNmNkM2Y5ZDQ4NTQyNDMxYTg1ZjU5MDViOTgxMTM3ZjcgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NDcxNzY4LC03OS4zODE1NzY0MDAwMDAwMV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9kNDk5MzE3N2RjZTE0YjcxYTk2MDc5ZWVlNjQyNzc3MyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9kZTk2ZGQzM2U1NDg0YjYzYmE5ODNlMzZlYmJkMWIxNiA9ICQoJzxkaXYgaWQ9Imh0bWxfZGU5NmRkMzNlNTQ4NGI2M2JhOTgzZTM2ZWJiZDFiMTYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2Q0OTkzMTc3ZGNlMTRiNzFhOTYwNzllZWU2NDI3NzczLnNldENvbnRlbnQoaHRtbF9kZTk2ZGQzM2U1NDg0YjYzYmE5ODNlMzZlYmJkMWIxNik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl82Y2QzZjlkNDg1NDI0MzFhODVmNTkwNWI5ODExMzdmNy5iaW5kUG9wdXAocG9wdXBfZDQ5OTMxNzdkY2UxNGI3MWE5NjA3OWVlZTY0Mjc3NzMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfZTIyM2Q5OTFlMjg1NGUyOThiNTczZGIyMjM4YzJhMmIgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzY2MGRiZDk0MWVkMDQwMGY4N2U3YWVjZTY0ZjFmNDI1ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzRkMTRlMDUwNDgyZjRhOGZhNmJhNjRjYzBjNDUwMjJkID0gJCgnPGRpdiBpZD0iaHRtbF80ZDE0ZTA1MDQ4MmY0YThmYTZiYTY0Y2MwYzQ1MDIyZCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNjYwZGJkOTQxZWQwNDAwZjg3ZTdhZWNlNjRmMWY0MjUuc2V0Q29udGVudChodG1sXzRkMTRlMDUwNDgyZjRhOGZhNmJhNjRjYzBjNDUwMjJkKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2UyMjNkOTkxZTI4NTRlMjk4YjU3M2RiMjIzOGMyYTJiLmJpbmRQb3B1cChwb3B1cF82NjBkYmQ5NDFlZDA0MDBmODdlN2FlY2U2NGYxZjQyNSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9iYWQ1M2YxOGIwNjI0N2JjYTBkMzhhMGNlNWU0MGE2NyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjYzNjg0NzIsLTc5LjQyODE5MTQwMDAwMDAyXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiM4MDAwZmYiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjODAwMGZmIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzQ3MzZmZGY0ZDIxYTRkZDA5ODBiY2IwYjE1NzM5MjQ5ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2MyYTUxYjUyMWIxZTQ2ZDZhZTRkZTdjMWQ3MjMzNWEzID0gJCgnPGRpdiBpZD0iaHRtbF9jMmE1MWI1MjFiMWU0NmQ2YWU0ZGU3YzFkNzIzMzVhMyIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+IENsdXN0ZXIgMTwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNDczNmZkZjRkMjFhNGRkMDk4MGJjYjBiMTU3MzkyNDkuc2V0Q29udGVudChodG1sX2MyYTUxYjUyMWIxZTQ2ZDZhZTRkZTdjMWQ3MjMzNWEzKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2JhZDUzZjE4YjA2MjQ3YmNhMGQzOGEwY2U1ZTQwYTY3LmJpbmRQb3B1cChwb3B1cF80NzM2ZmRmNGQyMWE0ZGQwOTgwYmNiMGIxNTczOTI0OSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl8zN2U2NDI3ZTY1NzM0ODAzYmJlMTVkOGJiM2MwMGZkMiA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MzQ4MTcsLTc5LjM4MzkzNDddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogZmFsc2UsCiAgImZpbGxDb2xvciI6ICJjaGFydHJldXNlIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAxNTAsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYmJhNzgzZWRlYWRmNGYyMzkwYzNjMGRlNDNmYjY5MzEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNWVmMjkwZTA1ZWQ1NDk5NTg5YTgyZmI5MmFlM2I5MmUgPSAkKCc8ZGl2IGlkPSJodG1sXzVlZjI5MGUwNWVkNTQ5OTU4OWE4MmZiOTJhZTNiOTJlIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MYXVyZWxodXJzdCBQYXJrPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9iYmE3ODNlZGVhZGY0ZjIzOTBjM2MwZGU0M2ZiNjkzMS5zZXRDb250ZW50KGh0bWxfNWVmMjkwZTA1ZWQ1NDk5NTg5YTgyZmI5MmFlM2I5MmUpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMzdlNjQyN2U2NTczNDgwM2JiZTE1ZDhiYjNjMDBmZDIuYmluZFBvcHVwKHBvcHVwX2JiYTc4M2VkZWFkZjRmMjM5MGMzYzBkZTQzZmI2OTMxKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzBiMmE4YzFjZmE4ZTQ0NjhiYWI1NWYwYzc3NGFhMDNlID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjY4OTk4NSwtNzkuMzE1NTcxNTk5OTk5OThdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2ZmMDAwMCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNmZjAwMDAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNWJhMThkMjk3YmZiNGFiZmFlN2ZhMDQ3ZTFmYzMxMGEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMGM0NWE1N2ZiMWE4NDcyZWFiNDYzMTZhMTJiMmEzYTMgPSAkKCc8ZGl2IGlkPSJodG1sXzBjNDVhNTdmYjFhODQ3MmVhYjQ2MzE2YTEyYjJhM2EzIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAwPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF81YmExOGQyOTdiZmI0YWJmYWU3ZmEwNDdlMWZjMzEwYS5zZXRDb250ZW50KGh0bWxfMGM0NWE1N2ZiMWE4NDcyZWFiNDYzMTZhMTJiMmEzYTMpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMGIyYThjMWNmYThlNDQ2OGJhYjU1ZjBjNzc0YWEwM2UuYmluZFBvcHVwKHBvcHVwXzViYTE4ZDI5N2JmYjRhYmZhZTdmYTA0N2UxZmMzMTBhKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2FmNjAwM2U0YzIxMTQ0MzQ4NzAwMmVmODU2YzU3YWY0ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9kM2M0YTNmNDk0NzA0ZWQ5ODc3MDk3OGJlNTg3NDdiNiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF83YjM3MmU0MWQxOWU0NTM3YTQxMTQ1N2EwZDhiMzJkZiA9ICQoJzxkaXYgaWQ9Imh0bWxfN2IzNzJlNDFkMTllNDUzN2E0MTE0NTdhMGQ4YjMyZGYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2QzYzRhM2Y0OTQ3MDRlZDk4NzcwOTc4YmU1ODc0N2I2LnNldENvbnRlbnQoaHRtbF83YjM3MmU0MWQxOWU0NTM3YTQxMTQ1N2EwZDhiMzJkZik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9hZjYwMDNlNGMyMTE0NDM0ODcwMDJlZjg1NmM1N2FmNC5iaW5kUG9wdXAocG9wdXBfZDNjNGEzZjQ5NDcwNGVkOTg3NzA5NzhiZTU4NzQ3YjYpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfYzRkZWJkOTg5NTUxNDVhYzgwOTc2NjQ4NGJkNTU2NDYgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NDgxOTg1LC03OS4zNzk4MTY5MDAwMDAwMV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8xYzc5YTU2ZjA5NjU0NDMxOThjY2JjMWI3Yzk1ZmE4YyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8zYjUyYzU5MDY4YmY0OWZjYjU0MjFmOWRkMThlNmRjNyA9ICQoJzxkaXYgaWQ9Imh0bWxfM2I1MmM1OTA2OGJmNDlmY2I1NDIxZjlkZDE4ZTZkYzciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzFjNzlhNTZmMDk2NTQ0MzE5OGNjYmMxYjdjOTVmYThjLnNldENvbnRlbnQoaHRtbF8zYjUyYzU5MDY4YmY0OWZjYjU0MjFmOWRkMThlNmRjNyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9jNGRlYmQ5ODk1NTE0NWFjODA5NzY2NDg0YmQ1NTY0Ni5iaW5kUG9wdXAocG9wdXBfMWM3OWE1NmYwOTY1NDQzMTk4Y2NiYzFiN2M5NWZhOGMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMzM5N2UwZTUzMjNmNGJiZTg2MjA3OTJkNTQxMTRiYTcgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzU0ZWZkNTY1NGI3MzRjM2ZhOTBjYTk0OGJjNzliNjcyID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2NmOTE4Mzg4MWFlYTRkYzZiYmY2ZDgyZTMxMWExMGI0ID0gJCgnPGRpdiBpZD0iaHRtbF9jZjkxODM4ODFhZWE0ZGM2YmJmNmQ4MmUzMTFhMTBiNCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNTRlZmQ1NjU0YjczNGMzZmE5MGNhOTQ4YmM3OWI2NzIuc2V0Q29udGVudChodG1sX2NmOTE4Mzg4MWFlYTRkYzZiYmY2ZDgyZTMxMWExMGI0KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzMzOTdlMGU1MzIzZjRiYmU4NjIwNzkyZDU0MTE0YmE3LmJpbmRQb3B1cChwb3B1cF81NGVmZDU2NTRiNzM0YzNmYTkwY2E5NDhiYzc5YjY3Mik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl83YjU3ODMyNjM3YzI0YjMxYWQ1NGI5YjA3NzJmNGIzOSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1OTUyNTUsLTc5LjM0MDkyM10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZmYwMDAwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2ZmMDAwMCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF82NTMzZWIwNjA0ZGY0NzMxYTAyMDhmYzA3ZGJlYjk4NiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9kMjVlZTRlOTlkNzU0NzE5OGU3ODZkNDg5N2Y0YTMyNyA9ICQoJzxkaXYgaWQ9Imh0bWxfZDI1ZWU0ZTk5ZDc1NDcxOThlNzg2ZDQ4OTdmNGEzMjciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDA8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzY1MzNlYjA2MDRkZjQ3MzFhMDIwOGZjMDdkYmViOTg2LnNldENvbnRlbnQoaHRtbF9kMjVlZTRlOTlkNzU0NzE5OGU3ODZkNDg5N2Y0YTMyNyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl83YjU3ODMyNjM3YzI0YjMxYWQ1NGI5YjA3NzJmNGIzOS5iaW5kUG9wdXAocG9wdXBfNjUzM2ViMDYwNGRmNDczMWEwMjA4ZmMwN2RiZWI5ODYpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfZGE2ZmNmYzhjN2NmNDYwOThkYTUwMjZmNWVjYmI1YTYgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2NkOTg0Y2JlMGQ0NzRmMjVhMTczNWMwMmZiMjY1ZGJiID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2Y1YWQ4MzMxMzNlZTQ2M2NiMGE5NDMxMjYwNzUwYjc5ID0gJCgnPGRpdiBpZD0iaHRtbF9mNWFkODMzMTMzZWU0NjNjYjBhOTQzMTI2MDc1MGI3OSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfY2Q5ODRjYmUwZDQ3NGYyNWExNzM1YzAyZmIyNjVkYmIuc2V0Q29udGVudChodG1sX2Y1YWQ4MzMxMzNlZTQ2M2NiMGE5NDMxMjYwNzUwYjc5KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2RhNmZjZmM4YzdjZjQ2MDk4ZGE1MDI2ZjVlY2JiNWE2LmJpbmRQb3B1cChwb3B1cF9jZDk4NGNiZTBkNDc0ZjI1YTE3MzVjMDJmYjI2NWRiYik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9mOTVjOTA3NmEyZjA0YTkwODYzNmE3YzMwYjkzMDM3NyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjcyODAyMDUsLTc5LjM4ODc5MDFdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzJhZGRkZCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMyYWRkZGQiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNjVlMjQ5MGI1OTMzNDQzYmIzYzM1Njk0NmMzMDNlOGUgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfYmU0NmJlZDc1OGI0NGU1M2ExMDJhMTdlNzI1NGUwYjEgPSAkKCc8ZGl2IGlkPSJodG1sX2JlNDZiZWQ3NThiNDRlNTNhMTAyYTE3ZTcyNTRlMGIxIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAyPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF82NWUyNDkwYjU5MzM0NDNiYjNjMzU2OTQ2YzMwM2U4ZS5zZXRDb250ZW50KGh0bWxfYmU0NmJlZDc1OGI0NGU1M2ExMDJhMTdlNzI1NGUwYjEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfZjk1YzkwNzZhMmYwNGE5MDg2MzZhN2MzMGI5MzAzNzcuYmluZFBvcHVwKHBvcHVwXzY1ZTI0OTBiNTkzMzQ0M2JiM2MzNTY5NDZjMzAzZThlKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2MzNTVkOGRkOTdlNjRiMzM4NzA0Njc1OWU1N2YxMmMxID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9mODZlZGUyMTIxNTc0MmE4OTUxOTlhY2QwZDM0ZTYzMSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF80ZTc2ZDE4ZGEyZTU0ODQ1YjdhOGFmMzVkMzk2MDI4OSA9ICQoJzxkaXYgaWQ9Imh0bWxfNGU3NmQxOGRhMmU1NDg0NWI3YThhZjM1ZDM5NjAyODkiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2Y4NmVkZTIxMjE1NzQyYTg5NTE5OWFjZDBkMzRlNjMxLnNldENvbnRlbnQoaHRtbF80ZTc2ZDE4ZGEyZTU0ODQ1YjdhOGFmMzVkMzk2MDI4OSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9jMzU1ZDhkZDk3ZTY0YjMzODcwNDY3NTllNTdmMTJjMS5iaW5kUG9wdXAocG9wdXBfZjg2ZWRlMjEyMTU3NDJhODk1MTk5YWNkMGQzNGU2MzEpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfODBjNjZiMTBlYjMxNDZkODlmMzkyMjAzMzQ3MjY1NDAgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My43MTE2OTQ4LC03OS40MTY5MzU1OTk5OTk5OV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjMmFkZGRkIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzJhZGRkZCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9kNjY1MTg2YzJkMTI0NmY3OTY4ZDJhYzM1Y2U0ZmQzZiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9jMTM1YWU0YzZlYmE0ZTJlYmZjNmYzZjc2MDMzMmZjYiA9ICQoJzxkaXYgaWQ9Imh0bWxfYzEzNWFlNGM2ZWJhNGUyZWJmYzZmM2Y3NjAzMzJmY2IiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDI8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2Q2NjUxODZjMmQxMjQ2Zjc5NjhkMmFjMzVjZTRmZDNmLnNldENvbnRlbnQoaHRtbF9jMTM1YWU0YzZlYmE0ZTJlYmZjNmYzZjc2MDMzMmZjYik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl84MGM2NmIxMGViMzE0NmQ4OWYzOTIyMDMzNDcyNjU0MC5iaW5kUG9wdXAocG9wdXBfZDY2NTE4NmMyZDEyNDZmNzk2OGQyYWMzNWNlNGZkM2YpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNzc5ODE1ZTAxYjFjNDMwZjhkZWZjZWM1MmYxZTgxNTUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzAzYmFlZDIzNDIzNDQyYWVhMGVmZDNjMGQ0ZmVhYTk1ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2RlNDU1YjgzNzEyMjRlODBhZDliY2RhZTMyYjY0MjA1ID0gJCgnPGRpdiBpZD0iaHRtbF9kZTQ1NWI4MzcxMjI0ZTgwYWQ5YmNkYWUzMmI2NDIwNSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMDNiYWVkMjM0MjM0NDJhZWEwZWZkM2MwZDRmZWFhOTUuc2V0Q29udGVudChodG1sX2RlNDU1YjgzNzEyMjRlODBhZDliY2RhZTMyYjY0MjA1KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzc3OTgxNWUwMWIxYzQzMGY4ZGVmY2VjNTJmMWU4MTU1LmJpbmRQb3B1cChwb3B1cF8wM2JhZWQyMzQyMzQ0MmFlYTBlZmQzYzBkNGZlYWE5NSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl84ZTRlZTFmMjE5NzU0ODBjOTRkMDdhMmNkMDg5ZWE2YyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjcxMjc1MTEsLTc5LjM5MDE5NzVdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzJhZGRkZCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMyYWRkZGQiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfOWZjZDlmNmIwNjJmNGYxMjg0ZTc1ZjRjMDUyOGMwNTIgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMjg2N2E0MzZlZGU3NDAzN2I4YmU1Yzg4YmYyMjQ1ZmYgPSAkKCc8ZGl2IGlkPSJodG1sXzI4NjdhNDM2ZWRlNzQwMzdiOGJlNWM4OGJmMjI0NWZmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAyPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF85ZmNkOWY2YjA2MmY0ZjEyODRlNzVmNGMwNTI4YzA1Mi5zZXRDb250ZW50KGh0bWxfMjg2N2E0MzZlZGU3NDAzN2I4YmU1Yzg4YmYyMjQ1ZmYpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfOGU0ZWUxZjIxOTc1NDgwYzk0ZDA3YTJjZDA4OWVhNmMuYmluZFBvcHVwKHBvcHVwXzlmY2Q5ZjZiMDYyZjRmMTI4NGU3NWY0YzA1MjhjMDUyKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2IwZjE5YjI5MDFjMzQyYjc5YTIyMmIxMjJkZGIxZTkzID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9hYWY5NTM1NzE1NWQ0MGFkODIzMjIzM2Y4MzQ5YWU3MiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9jMTljMjBkMWQ1ZTI0YzY4OTA2YzExY2M5OGRmZDE4MSA9ICQoJzxkaXYgaWQ9Imh0bWxfYzE5YzIwZDFkNWUyNGM2ODkwNmMxMWNjOThkZmQxODEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2FhZjk1MzU3MTU1ZDQwYWQ4MjMyMjMzZjgzNDlhZTcyLnNldENvbnRlbnQoaHRtbF9jMTljMjBkMWQ1ZTI0YzY4OTA2YzExY2M5OGRmZDE4MSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9iMGYxOWIyOTAxYzM0MmI3OWEyMjJiMTIyZGRiMWU5My5iaW5kUG9wdXAocG9wdXBfYWFmOTUzNTcxNTVkNDBhZDgyMzIyMzNmODM0OWFlNzIpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfZWM0ZDZiOWNkOWU4NGFmMjk4MmQ5MTdmMTZmNjVmNGQgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42OTY5NDc2LC03OS40MTEzMDcyMDAwMDAwMV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjMmFkZGRkIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzJhZGRkZCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9mOGQzNjI2NWExYmU0N2JhYTYyZDczMWIyZTI3ODA5ZiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9mMzU1Mjk1YTE5OWI0NmY4YTM0NGZmYTI0MTA1ODJhMyA9ICQoJzxkaXYgaWQ9Imh0bWxfZjM1NTI5NWExOTliNDZmOGEzNDRmZmEyNDEwNTgyYTMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDI8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2Y4ZDM2MjY1YTFiZTQ3YmFhNjJkNzMxYjJlMjc4MDlmLnNldENvbnRlbnQoaHRtbF9mMzU1Mjk1YTE5OWI0NmY4YTM0NGZmYTI0MTA1ODJhMyk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9lYzRkNmI5Y2Q5ZTg0YWYyOTgyZDkxN2YxNmY2NWY0ZC5iaW5kUG9wdXAocG9wdXBfZjhkMzYyNjVhMWJlNDdiYWE2MmQ3MzFiMmUyNzgwOWYpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMjMyNjkyYjljYWJlNDgzMWFiNjlhYWMzZWY0NWUxZTcgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzEwZTQ1OTBlMGNkNDQ4YTdhZDBlZmZhYjJkOGFhNTM0ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2MxNGM5YTRkMTY4OTRjNTM5NzlhODVjOTg2M2NjYjkwID0gJCgnPGRpdiBpZD0iaHRtbF9jMTRjOWE0ZDE2ODk0YzUzOTc5YTg1Yzk4NjNjY2I5MCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMTBlNDU5MGUwY2Q0NDhhN2FkMGVmZmFiMmQ4YWE1MzQuc2V0Q29udGVudChodG1sX2MxNGM5YTRkMTY4OTRjNTM5NzlhODVjOTg2M2NjYjkwKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzIzMjY5MmI5Y2FiZTQ4MzFhYjY5YWFjM2VmNDVlMWU3LmJpbmRQb3B1cChwb3B1cF8xMGU0NTkwZTBjZDQ0OGE3YWQwZWZmYWIyZDhhYTUzNCk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9kZDIwZmFmMDAzYmE0M2JmODRmMTQxYjEyZGFiMTE5ZCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY2MTYwODMsLTc5LjQ2NDc2MzI5OTk5OTk5XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiM4MDAwZmYiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjODAwMGZmIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzI4ZTQ2NDhiYjY1NTRmOTViMTBkNjFlODFhZWIwMDQyID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2UyMThkYmVmNDQ4MDQwZTdhMGZmYjYwNjdmZGU0ZjU1ID0gJCgnPGRpdiBpZD0iaHRtbF9lMjE4ZGJlZjQ0ODA0MGU3YTBmZmI2MDY3ZmRlNGY1NSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+IENsdXN0ZXIgMTwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMjhlNDY0OGJiNjU1NGY5NWIxMGQ2MWU4MWFlYjAwNDIuc2V0Q29udGVudChodG1sX2UyMThkYmVmNDQ4MDQwZTdhMGZmYjYwNjdmZGU0ZjU1KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2RkMjBmYWYwMDNiYTQzYmY4NGYxNDFiMTJkYWIxMTlkLmJpbmRQb3B1cChwb3B1cF8yOGU0NjQ4YmI2NTU0Zjk1YjEwZDYxZTgxYWViMDA0Mik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl8yODRkNjAwMGQ4Njk0ZjU0YmQ5NDY0YzRlZjU2NGM1MyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MzQ4MTcsLTc5LjM4MzkzNDddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogZmFsc2UsCiAgImZpbGxDb2xvciI6ICJjaGFydHJldXNlIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAxNTAsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYTlhNjNjMzRmZDQ3NDJhZWI4Mzc2YjNmZjFjNmVlODggPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfY2JlZGZkYjBjYjc5NDNhMmFhZTNiOTA0ZmQzMTBmYjIgPSAkKCc8ZGl2IGlkPSJodG1sX2NiZWRmZGIwY2I3OTQzYTJhYWUzYjkwNGZkMzEwZmIyIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MYXVyZWxodXJzdCBQYXJrPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9hOWE2M2MzNGZkNDc0MmFlYjgzNzZiM2ZmMWM2ZWU4OC5zZXRDb250ZW50KGh0bWxfY2JlZGZkYjBjYjc5NDNhMmFhZTNiOTA0ZmQzMTBmYjIpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMjg0ZDYwMDBkODY5NGY1NGJkOTQ2NGM0ZWY1NjRjNTMuYmluZFBvcHVwKHBvcHVwX2E5YTYzYzM0ZmQ0NzQyYWViODM3NmIzZmYxYzZlZTg4KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2RkMjU3MmNiZWZmMzQ1NTM4ZmU5YzI0ZGM2YjZjNjJmID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNzE1MzgzNCwtNzkuNDA1Njc4NDAwMDAwMDFdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzJhZGRkZCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMyYWRkZGQiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZDc1OGMxZGUyOTU0NDcwMmE2Mzg5Y2MwOTkwYjVlM2IgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMWM2MTg0NzgxOGFiNDUyOWIzMDIwYzMzZTYxNzhiN2IgPSAkKCc8ZGl2IGlkPSJodG1sXzFjNjE4NDc4MThhYjQ1MjliMzAyMGMzM2U2MTc4YjdiIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAyPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9kNzU4YzFkZTI5NTQ0NzAyYTYzODljYzA5OTBiNWUzYi5zZXRDb250ZW50KGh0bWxfMWM2MTg0NzgxOGFiNDUyOWIzMDIwYzMzZTYxNzhiN2IpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfZGQyNTcyY2JlZmYzNDU1MzhmZTljMjRkYzZiNmM2MmYuYmluZFBvcHVwKHBvcHVwX2Q3NThjMWRlMjk1NDQ3MDJhNjM4OWNjMDk5MGI1ZTNiKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzZkYjg0ZWI2ZWI4NDQyZmNiMDBhZjIxZmNkOTY1MGU1ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9lOTZjZjFhY2ZiM2I0MGVmYTE4Njc4M2QwMDNjN2MwMSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF80ZDc5MjAyYjE3OTY0MDVhYmYxNjU1ZDJkYjQ5Y2U1MSA9ICQoJzxkaXYgaWQ9Imh0bWxfNGQ3OTIwMmIxNzk2NDA1YWJmMTY1NWQyZGI0OWNlNTEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2U5NmNmMWFjZmIzYjQwZWZhMTg2NzgzZDAwM2M3YzAxLnNldENvbnRlbnQoaHRtbF80ZDc5MjAyYjE3OTY0MDVhYmYxNjU1ZDJkYjQ5Y2U1MSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl82ZGI4NGViNmViODQ0MmZjYjAwYWYyMWZjZDk2NTBlNS5iaW5kUG9wdXAocG9wdXBfZTk2Y2YxYWNmYjNiNDBlZmExODY3ODNkMDAzYzdjMDEpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNGUwNzM0MjA3NmU2NDg4ZWIwN2NkMDBjZTAyYmE2YWEgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NzI3MDk3LC03OS40MDU2Nzg0MDAwMDAwMV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9jOGIzZWRlZjU0ZmY0ZmUyYmMyNDFjOGFkZjJiNTBlMSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF83MTk1MzI0YThlYTE0Zjc1OTFhNDBkZjU2MmNiYzMxOCA9ICQoJzxkaXYgaWQ9Imh0bWxfNzE5NTMyNGE4ZWExNGY3NTkxYTQwZGY1NjJjYmMzMTgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2M4YjNlZGVmNTRmZjRmZTJiYzI0MWM4YWRmMmI1MGUxLnNldENvbnRlbnQoaHRtbF83MTk1MzI0YThlYTE0Zjc1OTFhNDBkZjU2MmNiYzMxOCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl80ZTA3MzQyMDc2ZTY0ODhlYjA3Y2QwMGNlMDJiYTZhYS5iaW5kUG9wdXAocG9wdXBfYzhiM2VkZWY1NGZmNGZlMmJjMjQxYzhhZGYyYjUwZTEpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMjUzMDk0NDc4ZmVkNDYxOWExNWMxYjYzZDE2ZTUwZWQgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzM2MDExODEyY2FjNjQ3NjBhZWU2NTY1ZjdlNzdkOTU0ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzRmMDIzODg4ZWQwNTQzNWZiYjA0MmJhYzAzZmVmOTExID0gJCgnPGRpdiBpZD0iaHRtbF80ZjAyMzg4OGVkMDU0MzVmYmIwNDJiYWMwM2ZlZjkxMSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMzYwMTE4MTJjYWM2NDc2MGFlZTY1NjVmN2U3N2Q5NTQuc2V0Q29udGVudChodG1sXzRmMDIzODg4ZWQwNTQzNWZiYjA0MmJhYzAzZmVmOTExKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzI1MzA5NDQ3OGZlZDQ2MTlhMTVjMWI2M2QxNmU1MGVkLmJpbmRQb3B1cChwb3B1cF8zNjAxMTgxMmNhYzY0NzYwYWVlNjU2NWY3ZTc3ZDk1NCk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl83ZGEzNmYzMTlkMzg0NjEwYmZjNDUzZGY3YjE1MDhhYSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY0ODk1OTcsLTc5LjQ1NjMyNV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjODAwMGZmIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzgwMDBmZiIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF81ZmRhYWE1ZTk5YmQ0NjFhOWI3NWEwNjU5YjFkNWQzNSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF80NmMxYzMzMGY3Y2Q0NGMyYjhmNThmMTc2ZTY2MTY4NiA9ICQoJzxkaXYgaWQ9Imh0bWxfNDZjMWMzMzBmN2NkNDRjMmI4ZjU4ZjE3NmU2NjE2ODYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDE8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzVmZGFhYTVlOTliZDQ2MWE5Yjc1YTA2NTliMWQ1ZDM1LnNldENvbnRlbnQoaHRtbF80NmMxYzMzMGY3Y2Q0NGMyYjhmNThmMTc2ZTY2MTY4Nik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl83ZGEzNmYzMTlkMzg0NjEwYmZjNDUzZGY3YjE1MDhhYS5iaW5kUG9wdXAocG9wdXBfNWZkYWFhNWU5OWJkNDYxYTliNzVhMDY1OWIxZDVkMzUpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMmUzMDc5NWM3MjkxNDk5NDgzZDlmMzkwNDZjMDBhOGEgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2RmODY0OGQ2MDQ2YjRlNTRiNjE3NDRjMTRjNDM1MDNhID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2FhYzkwMDE2NjYzMzQyODE5MWZhMzU4NThjMzg4YjQ1ID0gJCgnPGRpdiBpZD0iaHRtbF9hYWM5MDAxNjY2MzM0MjgxOTFmYTM1ODU4YzM4OGI0NSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZGY4NjQ4ZDYwNDZiNGU1NGI2MTc0NGMxNGM0MzUwM2Euc2V0Q29udGVudChodG1sX2FhYzkwMDE2NjYzMzQyODE5MWZhMzU4NThjMzg4YjQ1KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzJlMzA3OTVjNzI5MTQ5OTQ4M2Q5ZjM5MDQ2YzAwYThhLmJpbmRQb3B1cChwb3B1cF9kZjg2NDhkNjA0NmI0ZTU0YjYxNzQ0YzE0YzQzNTAzYSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl82YTE3MTc0ZWRlM2E0Y2RiODg1ZDliNDgwZjZjMmMyYSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjcwNDMyNDQsLTc5LjM4ODc5MDFdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiIzJhZGRkZCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMyYWRkZGQiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYWQ2MGFjMzQ0MWZlNGEzMzg3NmY2MGM2ZGM5NDQ5ZTYgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMWMxOWViN2EwODI5NGRhMmJlZDc5MjcxOGQ4N2JlMmEgPSAkKCc8ZGl2IGlkPSJodG1sXzFjMTllYjdhMDgyOTRkYTJiZWQ3OTI3MThkODdiZTJhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAyPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9hZDYwYWMzNDQxZmU0YTMzODc2ZjYwYzZkYzk0NDllNi5zZXRDb250ZW50KGh0bWxfMWMxOWViN2EwODI5NGRhMmJlZDc5MjcxOGQ4N2JlMmEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNmExNzE3NGVkZTNhNGNkYjg4NWQ5YjQ4MGY2YzJjMmEuYmluZFBvcHVwKHBvcHVwX2FkNjBhYzM0NDFmZTRhMzM4NzZmNjBjNmRjOTQ0OWU2KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzc4M2EyNjZlMWFjYzQ0M2E5NWNmYTM0NTU0ZjgxZjc4ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8yYjUwNjliNmQzZDA0OGNhOWQyNWE5OTVhNWQ5YTdmNSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF81YmNmMjc4ZTMxYjU0NGYwYjgzMmM0NWNhMjdlZDY4ZSA9ICQoJzxkaXYgaWQ9Imh0bWxfNWJjZjI3OGUzMWI1NDRmMGI4MzJjNDVjYTI3ZWQ2OGUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzJiNTA2OWI2ZDNkMDQ4Y2E5ZDI1YTk5NWE1ZDlhN2Y1LnNldENvbnRlbnQoaHRtbF81YmNmMjc4ZTMxYjU0NGYwYjgzMmM0NWNhMjdlZDY4ZSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl83ODNhMjY2ZTFhY2M0NDNhOTVjZmEzNDU1NGY4MWY3OC5iaW5kUG9wdXAocG9wdXBfMmI1MDY5YjZkM2QwNDhjYTlkMjVhOTk1YTVkOWE3ZjUpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMmNhMTg1MWE2NWMxNGJlNGFiNjFhYjg2YmU1YTMzZmYgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NjI2OTU2LC03OS40MDAwNDkzXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiNkNGRkODAiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjZDRkZDgwIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2JlYjkzZDNhOTYxZDRjMjNhYmU4MDIxZjA3MGU2NWRjID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2ViYzI1M2UyMWQ1ZjQ0ZmE4YzkyN2JmNDEzYmZmNjQ3ID0gJCgnPGRpdiBpZD0iaHRtbF9lYmMyNTNlMjFkNWY0NGZhOGM5MjdiZjQxM2JmZjY0NyIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+IENsdXN0ZXIgMzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYmViOTNkM2E5NjFkNGMyM2FiZTgwMjFmMDcwZTY1ZGMuc2V0Q29udGVudChodG1sX2ViYzI1M2UyMWQ1ZjQ0ZmE4YzkyN2JmNDEzYmZmNjQ3KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzJjYTE4NTFhNjVjMTRiZTRhYjYxYWI4NmJlNWEzM2ZmLmJpbmRQb3B1cChwb3B1cF9iZWI5M2QzYTk2MWQ0YzIzYWJlODAyMWYwNzBlNjVkYyk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl85M2ZjOGY5ZGYxZTQ0NDBiOWU4NjZiZTIxMWJkZDBlZCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MzQ4MTcsLTc5LjM4MzkzNDddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogZmFsc2UsCiAgImZpbGxDb2xvciI6ICJjaGFydHJldXNlIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAxNTAsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYTc1MDM3Y2Y2MjExNGE1ZWIyNWI0YjJlNTViODdhMDAgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNGQzZWQ0ZTdkYmFkNDE5MTlkNmMwNDM3Zjg0MjIyYWMgPSAkKCc8ZGl2IGlkPSJodG1sXzRkM2VkNGU3ZGJhZDQxOTE5ZDZjMDQzN2Y4NDIyMmFjIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MYXVyZWxodXJzdCBQYXJrPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9hNzUwMzdjZjYyMTE0YTVlYjI1YjRiMmU1NWI4N2EwMC5zZXRDb250ZW50KGh0bWxfNGQzZWQ0ZTdkYmFkNDE5MTlkNmMwNDM3Zjg0MjIyYWMpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfOTNmYzhmOWRmMWU0NDQwYjllODY2YmUyMTFiZGQwZWQuYmluZFBvcHVwKHBvcHVwX2E3NTAzN2NmNjIxMTRhNWViMjViNGIyZTU1Yjg3YTAwKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzgxOTI1MmQyYzY2ZTQ4YTZhNjJjNWVjZGVhMTZmMzNiID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUxNTcwNiwtNzkuNDg0NDQ5OV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjODAwMGZmIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzgwMDBmZiIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF80YzVkOGY0NWE2Mzk0ZmRmODdhMTg4NmRiN2IwMjlkNyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF83NDJhNDg5NmQ3MDE0NjEzOGNiODUwZTgyNjA3MmY4ZCA9ICQoJzxkaXYgaWQ9Imh0bWxfNzQyYTQ4OTZkNzAxNDYxMzhjYjg1MGU4MjYwNzJmOGQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDE8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzRjNWQ4ZjQ1YTYzOTRmZGY4N2ExODg2ZGI3YjAyOWQ3LnNldENvbnRlbnQoaHRtbF83NDJhNDg5NmQ3MDE0NjEzOGNiODUwZTgyNjA3MmY4ZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl84MTkyNTJkMmM2NmU0OGE2YTYyYzVlY2RlYTE2ZjMzYi5iaW5kUG9wdXAocG9wdXBfNGM1ZDhmNDVhNjM5NGZkZjg3YTE4ODZkYjdiMDI5ZDcpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNGM0Y2E4OTQ3NGE5NGI1YTljNGQwY2RiMzBlODYzZDAgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzdmMzZkNjkyMjlkNTQyNGViZmNlMjQ2ZjBkNDRiMGViID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzg1MDdlNTdhZjI4ZjQ3ZWRhNzMyMDZjMDMwMWU1ZWFiID0gJCgnPGRpdiBpZD0iaHRtbF84NTA3ZTU3YWYyOGY0N2VkYTczMjA2YzAzMDFlNWVhYiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfN2YzNmQ2OTIyOWQ1NDI0ZWJmY2UyNDZmMGQ0NGIwZWIuc2V0Q29udGVudChodG1sXzg1MDdlNTdhZjI4ZjQ3ZWRhNzMyMDZjMDMwMWU1ZWFiKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzRjNGNhODk0NzRhOTRiNWE5YzRkMGNkYjMwZTg2M2QwLmJpbmRQb3B1cChwb3B1cF83ZjM2ZDY5MjI5ZDU0MjRlYmZjZTI0NmYwZDQ0YjBlYik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl80MjZlOTY0NmY0MDk0ODc3YmE1ZmU1NzI2MDdjNWMzNSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY4OTU3NDMsLTc5LjM4MzE1OTkwMDAwMDAxXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiMyYWRkZGQiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMmFkZGRkIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2EyZTExODJjMjcxMTRjMjk5MzY2MDcxN2JiODZhMjhlID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2Q4NTg1YjQ0ZTIzOTQwNjhhZDQzMWM4NjVjZmUzNTc2ID0gJCgnPGRpdiBpZD0iaHRtbF9kODU4NWI0NGUyMzk0MDY4YWQ0MzFjODY1Y2ZlMzU3NiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+IENsdXN0ZXIgMjwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYTJlMTE4MmMyNzExNGMyOTkzNjYwNzE3YmI4NmEyOGUuc2V0Q29udGVudChodG1sX2Q4NTg1YjQ0ZTIzOTQwNjhhZDQzMWM4NjVjZmUzNTc2KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzQyNmU5NjQ2ZjQwOTQ4NzdiYTVmZTU3MjYwN2M1YzM1LmJpbmRQb3B1cChwb3B1cF9hMmUxMTgyYzI3MTE0YzI5OTM2NjA3MTdiYjg2YTI4ZSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl82NzU1ZjcyMDE0ZGI0MGEyODkwN2U3NWQ1OWQ3MjVkYyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MzQ4MTcsLTc5LjM4MzkzNDddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogZmFsc2UsCiAgImZpbGxDb2xvciI6ICJjaGFydHJldXNlIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAxNTAsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfOGFkYmIzN2JiNzliNDUzNjkwNzM4NDVmNjI2MWI2YjkgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNjE2YTJhOTA3ZjYxNDY5ZTk3N2FiZDMxYzIwNThhN2EgPSAkKCc8ZGl2IGlkPSJodG1sXzYxNmEyYTkwN2Y2MTQ2OWU5NzdhYmQzMWMyMDU4YTdhIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MYXVyZWxodXJzdCBQYXJrPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF84YWRiYjM3YmI3OWI0NTM2OTA3Mzg0NWY2MjYxYjZiOS5zZXRDb250ZW50KGh0bWxfNjE2YTJhOTA3ZjYxNDY5ZTk3N2FiZDMxYzIwNThhN2EpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNjc1NWY3MjAxNGRiNDBhMjg5MDdlNzVkNTlkNzI1ZGMuYmluZFBvcHVwKHBvcHVwXzhhZGJiMzdiYjc5YjQ1MzY5MDczODQ1ZjYyNjFiNmI5KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzM1ZWI3ZmJkNDdjYjQ1MzRiMGExYzI1MWRjNjc1YjFkID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzMjA1NywtNzkuNDAwMDQ5M10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF80ZjhkOTU3NjIyMDQ0ZThlYmEwOTI4NTBhNGVhYWJhNSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9hMTE1MGExY2E4ODM0OGRkYWRkYWQzOTUzNDgyZjI0OCA9ICQoJzxkaXYgaWQ9Imh0bWxfYTExNTBhMWNhODgzNDhkZGFkZGFkMzk1MzQ4MmYyNDgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzRmOGQ5NTc2MjIwNDRlOGViYTA5Mjg1MGE0ZWFhYmE1LnNldENvbnRlbnQoaHRtbF9hMTE1MGExY2E4ODM0OGRkYWRkYWQzOTUzNDgyZjI0OCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8zNWViN2ZiZDQ3Y2I0NTM0YjBhMWMyNTFkYzY3NWIxZC5iaW5kUG9wdXAocG9wdXBfNGY4ZDk1NzYyMjA0NGU4ZWJhMDkyODUwYTRlYWFiYTUpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNTQ1MDk2Njc1ZDNiNDExZWIzOTQ3ODNkMjRlYzk0M2QgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzZhZDhjNTdjN2IxNjRmYzFiOTcxNGNiMTIwMjA2NzE1ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzdmYjgzODcyYmQ5ODQwNGU5ODI2MjZjZjYxMDkxZjhlID0gJCgnPGRpdiBpZD0iaHRtbF83ZmI4Mzg3MmJkOTg0MDRlOTgyNjI2Y2Y2MTA5MWY4ZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNmFkOGM1N2M3YjE2NGZjMWI5NzE0Y2IxMjAyMDY3MTUuc2V0Q29udGVudChodG1sXzdmYjgzODcyYmQ5ODQwNGU5ODI2MjZjZjYxMDkxZjhlKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzU0NTA5NjY3NWQzYjQxMWViMzk0NzgzZDI0ZWM5NDNkLmJpbmRQb3B1cChwb3B1cF82YWQ4YzU3YzdiMTY0ZmMxYjk3MTRjYjEyMDIwNjcxNSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl85Y2MzYWVkZTIzOGQ0NzNkYTY0ZmNlODMwMmY5YzVkMCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY4NjQxMjI5OTk5OTk5LC03OS40MDAwNDkzXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiMyYWRkZGQiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMmFkZGRkIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzMzMjU4NzgyMWU1NDRmZTliNzVhMmQwMzA5ZDEwYTgxID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzgyMTkxNjQyYjgxYzRhYjdiZTAxZDA1NDhiNmI2MmY4ID0gJCgnPGRpdiBpZD0iaHRtbF84MjE5MTY0MmI4MWM0YWI3YmUwMWQwNTQ4YjZiNjJmOCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+IENsdXN0ZXIgMjwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMzMyNTg3ODIxZTU0NGZlOWI3NWEyZDAzMDlkMTBhODEuc2V0Q29udGVudChodG1sXzgyMTkxNjQyYjgxYzRhYjdiZTAxZDA1NDhiNmI2MmY4KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzljYzNhZWRlMjM4ZDQ3M2RhNjRmY2U4MzAyZjljNWQwLmJpbmRQb3B1cChwb3B1cF8zMzI1ODc4MjFlNTQ0ZmU5Yjc1YTJkMDMwOWQxMGE4MSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl8xOTNhNzliMjU4MWI0NmU2YWI1NWM0NTAyNDRlNjQ2ZCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MzQ4MTcsLTc5LjM4MzkzNDddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogZmFsc2UsCiAgImZpbGxDb2xvciI6ICJjaGFydHJldXNlIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAxNTAsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZDJhODAzNGM5NWYzNDUyZjgxYTFjMjhjMDUyMmU3ZWEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNDU4NGVhMTkyYmI1NDBmMTk2YjI3YzVkOTlkNWNlZDkgPSAkKCc8ZGl2IGlkPSJodG1sXzQ1ODRlYTE5MmJiNTQwZjE5NmIyN2M1ZDk5ZDVjZWQ5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MYXVyZWxodXJzdCBQYXJrPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9kMmE4MDM0Yzk1ZjM0NTJmODFhMWMyOGMwNTIyZTdlYS5zZXRDb250ZW50KGh0bWxfNDU4NGVhMTkyYmI1NDBmMTk2YjI3YzVkOTlkNWNlZDkpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMTkzYTc5YjI1ODFiNDZlNmFiNTVjNDUwMjQ0ZTY0NmQuYmluZFBvcHVwKHBvcHVwX2QyYTgwMzRjOTVmMzQ1MmY4MWExYzI4YzA1MjJlN2VhKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzNhNjM0NjA3OWZlMDQ1YjVhMzQ0MWJkOTMyNmYyOWE0ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjI4OTQ2NywtNzkuMzk0NDE5OV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICIjZDRkZDgwIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF82YTYxNjUwYzVhMDY0OGM0YTVlM2ZlYWE3ZTM5MjI2YyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF82MDdhNGQyZDgwYWQ0MDkxYWE5MzZkZTY5OTA0OTNkZCA9ICQoJzxkaXYgaWQ9Imh0bWxfNjA3YTRkMmQ4MGFkNDA5MWFhOTM2ZGU2OTkwNDkzZGQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPiBDbHVzdGVyIDM8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzZhNjE2NTBjNWEwNjQ4YzRhNWUzZmVhYTdlMzkyMjZjLnNldENvbnRlbnQoaHRtbF82MDdhNGQyZDgwYWQ0MDkxYWE5MzZkZTY5OTA0OTNkZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8zYTYzNDYwNzlmZTA0NWI1YTM0NDFiZDkzMjZmMjlhNC5iaW5kUG9wdXAocG9wdXBfNmE2MTY1MGM1YTA2NDhjNGE1ZTNmZWFhN2UzOTIyNmMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMDcyM2UwOTFmZWY0NDRiMWFlY2FlMTExYTEwN2ZiYjcgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTM0ODE3LC03OS4zODM5MzQ3XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImNoYXJ0cmV1c2UiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IGZhbHNlLAogICJmaWxsQ29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImZpbGxPcGFjaXR5IjogMC4yLAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogMTUwLAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzhhNTRjNWM4Y2U0MTRkM2I5YWI2MDJkMGNjZjBlNWYxID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzk4YzNiNjY2MGE0ZDQ0ODNiMmVjMzI1NTlmYzUwZjNlID0gJCgnPGRpdiBpZD0iaHRtbF85OGMzYjY2NjBhNGQ0NDgzYjJlYzMyNTU5ZmM1MGYzZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF1cmVsaHVyc3QgUGFyazwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfOGE1NGM1YzhjZTQxNGQzYjlhYjYwMmQwY2NmMGU1ZjEuc2V0Q29udGVudChodG1sXzk4YzNiNjY2MGE0ZDQ0ODNiMmVjMzI1NTlmYzUwZjNlKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzA3MjNlMDkxZmVmNDQ0YjFhZWNhZTExMWExMDdmYmI3LmJpbmRQb3B1cChwb3B1cF84YTU0YzVjOGNlNDE0ZDNiOWFiNjAyZDBjY2YwZTVmMSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl81OWZiMDkwMDcxZWQ0OGFjOWY1YmU4ZDVlZWM2ODJmNiA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY3OTU2MjYsLTc5LjM3NzUyOTQwMDAwMDAxXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiNkNGRkODAiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjZDRkZDgwIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzBmMmZlY2NlYTJkMjQzNWNiZjk3MGQwNDA2ZTcwZWUwID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzYxMmYzMTA1MmMwNjQwOGM4NjY2YWQwZGY3NjhmZjlhID0gJCgnPGRpdiBpZD0iaHRtbF82MTJmMzEwNTJjMDY0MDhjODY2NmFkMGRmNzY4ZmY5YSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+IENsdXN0ZXIgMzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMGYyZmVjY2VhMmQyNDM1Y2JmOTcwZDA0MDZlNzBlZTAuc2V0Q29udGVudChodG1sXzYxMmYzMTA1MmMwNjQwOGM4NjY2YWQwZGY3NjhmZjlhKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzU5ZmIwOTAwNzFlZDQ4YWM5ZjViZThkNWVlYzY4MmY2LmJpbmRQb3B1cChwb3B1cF8wZjJmZWNjZWEyZDI0MzVjYmY5NzBkMDQwNmU3MGVlMCk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl82ZmIwYWJkM2Y2ZGQ0ZDFlYjAxYjc5NDZjYjhmY2RmZSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MzQ4MTcsLTc5LjM4MzkzNDddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogZmFsc2UsCiAgImZpbGxDb2xvciI6ICJjaGFydHJldXNlIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAxNTAsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZjIzMTY0N2VkZWZmNDE0ZWJiYzI3MTIzMTk2NzA5OTkgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfOGYxNjI5YzViZWY5NGYzYjllZmQ4ZTYwZjdmYmYxODEgPSAkKCc8ZGl2IGlkPSJodG1sXzhmMTYyOWM1YmVmOTRmM2I5ZWZkOGU2MGY3ZmJmMTgxIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MYXVyZWxodXJzdCBQYXJrPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9mMjMxNjQ3ZWRlZmY0MTRlYmJjMjcxMjMxOTY3MDk5OS5zZXRDb250ZW50KGh0bWxfOGYxNjI5YzViZWY5NGYzYjllZmQ4ZTYwZjdmYmYxODEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNmZiMGFiZDNmNmRkNGQxZWIwMWI3OTQ2Y2I4ZmNkZmUuYmluZFBvcHVwKHBvcHVwX2YyMzE2NDdlZGVmZjQxNGViYmMyNzEyMzE5NjcwOTk5KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2VlYzIwMWMxMWEwZTQzZGVhZjczMzdkNjRlMjRkZjVmID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjQ2NDM1MiwtNzkuMzc0ODQ1OTk5OTk5OTldLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNkNGRkODAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMzQ1ZmU2MGNkY2NhNDBjOTlhMTVlZjVlZDY0ZTUxZjAgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMmI2Y2IyNzEwZmYwNDQ3MDg0MzA5YzVhMjNjOGM5ZDUgPSAkKCc8ZGl2IGlkPSJodG1sXzJiNmNiMjcxMGZmMDQ0NzA4NDMwOWM1YTIzYzhjOWQ1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAzPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8zNDVmZTYwY2RjY2E0MGM5OWExNWVmNWVkNjRlNTFmMC5zZXRDb250ZW50KGh0bWxfMmI2Y2IyNzEwZmYwNDQ3MDg0MzA5YzVhMjNjOGM5ZDUpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfZWVjMjAxYzExYTBlNDNkZWFmNzMzN2Q2NGUyNGRmNWYuYmluZFBvcHVwKHBvcHVwXzM0NWZlNjBjZGNjYTQwYzk5YTE1ZWY1ZWQ2NGU1MWYwKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzkwN2Y0MzhlNjQ1MjRiYjNiOGRiMmZjZjkwN2MyZDA0ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9mOGMxMDJlZmYyYzU0MThjYmNkZDMyNmUwNzgxZjdkOCA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF82MWU4MDE2MTYzMDQ0Yjc5YWQ5MzcxZjg3OWEwZDY4MSA9ICQoJzxkaXYgaWQ9Imh0bWxfNjFlODAxNjE2MzA0NGI3OWFkOTM3MWY4NzlhMGQ2ODEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2Y4YzEwMmVmZjJjNTQxOGNiY2RkMzI2ZTA3ODFmN2Q4LnNldENvbnRlbnQoaHRtbF82MWU4MDE2MTYzMDQ0Yjc5YWQ5MzcxZjg3OWEwZDY4MSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl85MDdmNDM4ZTY0NTI0YmIzYjhkYjJmY2Y5MDdjMmQwNC5iaW5kUG9wdXAocG9wdXBfZjhjMTAyZWZmMmM1NDE4Y2JjZGQzMjZlMDc4MWY3ZDgpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMjQ0MzFiYjQ1YjFiNDRlYzgzMGMzZGJiOGU0ZDg4NjIgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42Njc5NjcsLTc5LjM2NzY3NTNdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNkNGRkODAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMWM3ZWU1ZGY4MjI1NGI0NDhiMWM3YWE1Y2Y5Y2ZhMDYgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMGQ4Y2RkNTQyMzQzNDAzZGJhMmQwYWVkMmMxZjFlN2UgPSAkKCc8ZGl2IGlkPSJodG1sXzBkOGNkZDU0MjM0MzQwM2RiYTJkMGFlZDJjMWYxZTdlIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAzPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8xYzdlZTVkZjgyMjU0YjQ0OGIxYzdhYTVjZjljZmEwNi5zZXRDb250ZW50KGh0bWxfMGQ4Y2RkNTQyMzQzNDAzZGJhMmQwYWVkMmMxZjFlN2UpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMjQ0MzFiYjQ1YjFiNDRlYzgzMGMzZGJiOGU0ZDg4NjIuYmluZFBvcHVwKHBvcHVwXzFjN2VlNWRmODIyNTRiNDQ4YjFjN2FhNWNmOWNmYTA2KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2FhMGFmOGU5NWY5NjRjYmU4NGFmZTBlODQ0OWY5N2NlID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9hN2JjYzQ2MWFhOGQ0Y2NmOTkwNzQ4NmNjOGU3M2I5MCA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9jM2RhZTE4YzAzMDM0YzBkOTQ0MDU4YzE1ODNjMWE3ZiA9ICQoJzxkaXYgaWQ9Imh0bWxfYzNkYWUxOGMwMzAzNGMwZDk0NDA1OGMxNTgzYzFhN2YiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2E3YmNjNDYxYWE4ZDRjY2Y5OTA3NDg2Y2M4ZTczYjkwLnNldENvbnRlbnQoaHRtbF9jM2RhZTE4YzAzMDM0YzBkOTQ0MDU4YzE1ODNjMWE3Zik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9hYTBhZjhlOTVmOTY0Y2JlODRhZmUwZTg0NDlmOTdjZS5iaW5kUG9wdXAocG9wdXBfYTdiY2M0NjFhYThkNGNjZjk5MDc0ODZjYzhlNzNiOTApOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMWIzMmRlMzE2OTQyNGZiY2E2OWJkMjFhZjQ0MDU2YWEgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NDg0MjkyLC03OS4zODIyODAyXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogIiNkNGRkODAiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjZDRkZDgwIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzMyN2I1MTk2MDI2MTQ3ZTc5Mzk2M2E1YTA5MGUyNDEyKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzk4NGUxYzAyMzU5MTRjYWU5YjNjMGI0MTI2NGExMjkwID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzRkZGE3MTc0NTM5MTQ5NzViZDBhMjc1ZTQ1MTFmMzlmID0gJCgnPGRpdiBpZD0iaHRtbF80ZGRhNzE3NDUzOTE0OTc1YmQwYTI3NWU0NTExZjM5ZiIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+IENsdXN0ZXIgMzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfOTg0ZTFjMDIzNTkxNGNhZTliM2MwYjQxMjY0YTEyOTAuc2V0Q29udGVudChodG1sXzRkZGE3MTc0NTM5MTQ5NzViZDBhMjc1ZTQ1MTFmMzlmKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzFiMzJkZTMxNjk0MjRmYmNhNjliZDIxYWY0NDA1NmFhLmJpbmRQb3B1cChwb3B1cF85ODRlMWMwMjM1OTE0Y2FlOWIzYzBiNDEyNjRhMTI5MCk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl8xYmE4MzdjZTJkZTg0ZTY0OGMyNDMyZjc2ODIxZmY2ZCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1MzQ4MTcsLTc5LjM4MzkzNDddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiY2hhcnRyZXVzZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogZmFsc2UsCiAgImZpbGxDb2xvciI6ICJjaGFydHJldXNlIiwKICAiZmlsbE9wYWNpdHkiOiAwLjIsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiAxNTAsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZGI3Y2I4MzQ3YmE4NDQwMjk5ZjQ0ZGVlYThmMWNhNDEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNTM0NWE4ODA5Y2VlNDc2OWEwOTE1MThhZThhNmJhN2YgPSAkKCc8ZGl2IGlkPSJodG1sXzUzNDVhODgwOWNlZTQ3NjlhMDkxNTE4YWU4YTZiYTdmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MYXVyZWxodXJzdCBQYXJrPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9kYjdjYjgzNDdiYTg0NDAyOTlmNDRkZWVhOGYxY2E0MS5zZXRDb250ZW50KGh0bWxfNTM0NWE4ODA5Y2VlNDc2OWEwOTE1MThhZThhNmJhN2YpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMWJhODM3Y2UyZGU4NGU2NDhjMjQzMmY3NjgyMWZmNmQuYmluZFBvcHVwKHBvcHVwX2RiN2NiODM0N2JhODQ0MDI5OWY0NGRlZWE4ZjFjYTQxKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2QwMDMzYzNkYjM1MDQzOTZiNmJiYjU3OTY1MzllYTBiID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjY1ODU5OSwtNzkuMzgzMTU5OTAwMDAwMDFdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2Q0ZGQ4MCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNkNGRkODAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMzZmYmRhODFjMTFjNDYxYjg2NmE1NzEyNWI5NWJmZjUgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMzMzNzYzZGU3NDlmNDY3OTgwYjlhYWJlYzA0MDRlM2IgPSAkKCc8ZGl2IGlkPSJodG1sXzMzMzc2M2RlNzQ5ZjQ2Nzk4MGI5YWFiZWMwNDA0ZTNiIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAzPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8zNmZiZGE4MWMxMWM0NjFiODY2YTU3MTI1Yjk1YmZmNS5zZXRDb250ZW50KGh0bWxfMzMzNzYzZGU3NDlmNDY3OTgwYjlhYWJlYzA0MDRlM2IpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfZDAwMzNjM2RiMzUwNDM5NmI2YmJiNTc5NjUzOWVhMGIuYmluZFBvcHVwKHBvcHVwXzM2ZmJkYTgxYzExYzQ2MWI4NjZhNTcxMjViOTViZmY1KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2E4OTYzMTJjMTY0ZTQ0ODc5NmJmNzU2YTRhMGJhZDNjID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF80YmQ3NWIyMzk5ZGI0YTg4YTUwY2RkNGUyMDViZjI0NiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8wNGQzNDA5ODRiYmU0OTg4OTkyNWM1ZTBkY2Q4ZWExZSA9ICQoJzxkaXYgaWQ9Imh0bWxfMDRkMzQwOTg0YmJlNDk4ODk5MjVjNWUwZGNkOGVhMWUiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzRiZDc1YjIzOTlkYjRhODhhNTBjZGQ0ZTIwNWJmMjQ2LnNldENvbnRlbnQoaHRtbF8wNGQzNDA5ODRiYmU0OTg4OTkyNWM1ZTBkY2Q4ZWExZSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9hODk2MzEyYzE2NGU0NDg3OTZiZjc1NmE0YTBiYWQzYy5iaW5kUG9wdXAocG9wdXBfNGJkNzViMjM5OWRiNGE4OGE1MGNkZDRlMjA1YmYyNDYpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMzUzYWRmOWM4MDA2NGViODhiNTg1OTI0NTQwOTA3NDggPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NjI3NDM5LC03OS4zMjE1NThdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiI2ZmMDAwMCIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiNmZjAwMDAiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfMzI3YjUxOTYwMjYxNDdlNzkzOTYzYTVhMDkwZTI0MTIpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfOTdhZDlkM2UzYzM5NGE0MTliODczYmQ2MTY4MWQ4NDIgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfODVlY2U0NDUxNWQ5NDI4Yjk0ZDFmOWE4NjgxNjA1ZTggPSAkKCc8ZGl2IGlkPSJodG1sXzg1ZWNlNDQ1MTVkOTQyOGI5NGQxZjlhODY4MTYwNWU4IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij4gQ2x1c3RlciAwPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF85N2FkOWQzZTNjMzk0YTQxOWI4NzNiZDYxNjgxZDg0Mi5zZXRDb250ZW50KGh0bWxfODVlY2U0NDUxNWQ5NDI4Yjk0ZDFmOWE4NjgxNjA1ZTgpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMzUzYWRmOWM4MDA2NGViODhiNTg1OTI0NTQwOTA3NDguYmluZFBvcHVwKHBvcHVwXzk3YWQ5ZDNlM2MzOTRhNDE5Yjg3M2JkNjE2ODFkODQyKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzM2NDYyOTgwZjk1MDRhNmY4NDY4ZTU2MTczODc2ODExID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzNDgxNywtNzkuMzgzOTM0N10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJjaGFydHJldXNlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiBmYWxzZSwKICAiZmlsbENvbG9yIjogImNoYXJ0cmV1c2UiLAogICJmaWxsT3BhY2l0eSI6IDAuMiwKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDE1MCwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF8zMjdiNTE5NjAyNjE0N2U3OTM5NjNhNWEwOTBlMjQxMik7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iM2JjYWU5OWQ4MmQ0NDM2OTVmNmUyYWJjNjZkYTk0OSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8yODE3M2U0MWM3YmY0OWJkYTQ0YjFjZDg1YjhhYThlOCA9ICQoJzxkaXYgaWQ9Imh0bWxfMjgxNzNlNDFjN2JmNDliZGE0NGIxY2Q4NWI4YWE4ZTgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkxhdXJlbGh1cnN0IFBhcms8L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2IzYmNhZTk5ZDgyZDQ0MzY5NWY2ZTJhYmM2NmRhOTQ5LnNldENvbnRlbnQoaHRtbF8yODE3M2U0MWM3YmY0OWJkYTQ0YjFjZDg1YjhhYThlOCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8zNjQ2Mjk4MGY5NTA0YTZmODQ2OGU1NjE3Mzg3NjgxMS5iaW5kUG9wdXAocG9wdXBfYjNiY2FlOTlkODJkNDQzNjk1ZjZlMmFiYzY2ZGE5NDkpOwoKICAgICAgICAgICAgCiAgICAgICAgCjwvc2NyaXB0Pg== onload="this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>




